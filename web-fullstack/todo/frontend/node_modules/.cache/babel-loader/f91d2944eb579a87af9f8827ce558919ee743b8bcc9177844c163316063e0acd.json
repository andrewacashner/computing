{"ast":null,"code":"import ToDoItem from\"./ToDoItem\";export default class ToDoList{constructor(){let list=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let draft=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new ToDoItem();this.list=[...list];this.draftEntry=draft;}cloneWithDraft(draft){return new ToDoList(this.list,draft);}moveItemToDraft(item){return this.removeItem(item).cloneWithDraft(item);}partition(testFn){let results={true:[],false:[]};if(this.list.length>0){this.list.forEach(i=>results[testFn(i)].push(i));}return[results.true,results.false].map(r=>new ToDoList(r));}toSortedByDate(){let[deadlines,noDeadlines]=this.partition(i=>i.deadline!==null);let[dates,noDates]=deadlines.partition(i=>i.deadlineDate!==null);let datesSorted=dates.list.toSorted((a,b)=>a.deadlineDate-b.deadlineDate);function stringCompareFn(a,b){[a,b]=[a,b].map(i=>i.toLowerCase());if(a<b)return-1;else if(a>b)return 1;else return 0;}let noDatesSorted=noDates.list.toSorted((a,b)=>stringCompareFn(a.deadline,b.deadline));let noDeadlinesSorted=noDeadlines.list.toSorted((a,b)=>stringCompareFn(a.task,b.task));let newItems=[...noDeadlinesSorted,...noDatesSorted,...datesSorted];return new ToDoList(newItems);}hasIdenticalContents(other){let compared=this.list.map((item,index)=>item===other.list[index]);let tested=compared.every(i=>i===true);return tested;}isSorted(){let sorted=this.toSortedByDate();return this.hasIdenticalContents(sorted);}append(item){return new ToDoList([...this.list,item]);}moveWithinArray(fromID,toID){console.log(\"Move from item \".concat(fromID,\" to item \").concat(toID));function insertBefore(array,matchFn,item){let insertPoint=array.findIndex(matchFn);let before=array.slice(0,insertPoint);let after=array.slice(insertPoint);return[...before,item,...after];}let itemToMove=this.list.find(i=>i.id===fromID);let rest=this.list.filter(i=>i!==itemToMove);let newItems=[];if(toID===\"bottom\"){console.log(\"Move item to bottom\");newItems=[...rest,itemToMove];}else{console.log(\"Insert item\");newItems=insertBefore(rest,i=>i.id===toID,itemToMove);}return new ToDoList(newItems);}removeItem(item){let filtered=this.list.filter(i=>i!==item);return new ToDoList(filtered);}toggleDoneStatus(item){let toggledItem=item.toggled();console.log(\"Marking item as \".concat(toggledItem.doneStatus));let items=this.list;let split=items.indexOf(item);let before=items.slice(0,split);let after=items.slice(split+1);return new ToDoList([...before,toggledItem,...after]);}setAllItemStatus(isDone){let adjusted=this.list.map(i=>new ToDoItem({...i,isDone:isDone}));return new ToDoList(adjusted);}areAnyLeftToDo(){return this.list.some(i=>i.isDone===false);}areAnyDone(){return this.list.some(i=>i.isDone===true);}activeOrNot(test){return test?\"active\":\"inactive\";}checkAllStatus(){return this.activeOrNot(this.areAnyLeftToDo());}uncheckAllStatus(){return this.activeOrNot(this.areAnyDone());}unsortedStatus(){return this.activeOrNot(!this.isSorted());}}","map":{"version":3,"names":["ToDoItem","ToDoList","constructor","list","arguments","length","undefined","draft","draftEntry","cloneWithDraft","moveItemToDraft","item","removeItem","partition","testFn","results","true","false","forEach","i","push","map","r","toSortedByDate","deadlines","noDeadlines","deadline","dates","noDates","deadlineDate","datesSorted","toSorted","a","b","stringCompareFn","toLowerCase","noDatesSorted","noDeadlinesSorted","task","newItems","hasIdenticalContents","other","compared","index","tested","every","isSorted","sorted","append","moveWithinArray","fromID","toID","console","log","concat","insertBefore","array","matchFn","insertPoint","findIndex","before","slice","after","itemToMove","find","id","rest","filter","filtered","toggleDoneStatus","toggledItem","toggled","doneStatus","items","split","indexOf","setAllItemStatus","isDone","adjusted","areAnyLeftToDo","some","areAnyDone","activeOrNot","test","checkAllStatus","uncheckAllStatus","unsortedStatus"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/classes/ToDoList.js"],"sourcesContent":["import ToDoItem from \"./ToDoItem\";\n\nexport default class ToDoList {\n  list;\n  draftEntry;\n\n  constructor(list = [], draft = new ToDoItem()) {\n    this.list = [...list];\n    this.draftEntry = draft;\n  }\n\n  cloneWithDraft(draft) {\n    return new ToDoList(this.list, draft);\n  }\n\n  moveItemToDraft(item) {\n    return this.removeItem(item).cloneWithDraft(item);\n  }\n\n  partition(testFn) {\n    let results = { true: [], false: [] };\n    if (this.list.length > 0) {\n      this.list.forEach(i => results[testFn(i)].push(i));\n    }\n    return [results.true, results.false].map(r => new ToDoList(r));\n  }\n\n  toSortedByDate() {\n    let [deadlines, noDeadlines] = this.partition(i => i.deadline !== null);\n\n    let [dates, noDates] = deadlines.partition(i => i.deadlineDate !== null);\n\n    let datesSorted = dates.list.toSorted(\n      (a, b) => a.deadlineDate - b.deadlineDate);\n\n    function stringCompareFn(a, b) {\n      [a, b] = [a, b].map(i => i.toLowerCase());\n      if (a < b) return -1;\n      else if (a > b) return 1;\n      else return 0;\n    }\n\n    let noDatesSorted = noDates.list.toSorted(\n      (a, b) => stringCompareFn(a.deadline, b.deadline));\n\n    let noDeadlinesSorted = noDeadlines.list.toSorted(\n      (a, b) => stringCompareFn(a.task, b.task));\n\n    let newItems = [...noDeadlinesSorted, ...noDatesSorted, ...datesSorted];\n    return new ToDoList(newItems);\n  }\n\n  hasIdenticalContents(other) {\n    let compared = this.list.map((item, index) => item === other.list[index]);\n    let tested = compared.every(i => i === true);\n    return tested;\n  }\n \n  isSorted() {\n    let sorted = this.toSortedByDate();\n    return this.hasIdenticalContents(sorted);\n  }\n\n  append(item) {\n    return new ToDoList([...this.list, item]);\n  }\n\n  moveWithinArray(fromID, toID) {\n    console.log(`Move from item ${fromID} to item ${toID}`);\n    function insertBefore(array, matchFn, item) {\n      let insertPoint = array.findIndex(matchFn);\n      let before = array.slice(0, insertPoint);\n      let after = array.slice(insertPoint);\n      return [...before, item, ...after];\n    }\n\n    let itemToMove = this.list.find(i => i.id === fromID);\n    let rest = this.list.filter(i => i !== itemToMove);\n\n    let newItems = [];\n    if (toID === \"bottom\") {\n      console.log(\"Move item to bottom\");\n      newItems = [...rest, itemToMove];\n    } else {\n      console.log(\"Insert item\");\n      newItems = insertBefore(rest, (i => i.id === toID), itemToMove);\n    }\n    return new ToDoList(newItems);\n  }\n\n  removeItem(item) { \n    let filtered = this.list.filter(i => i !== item);\n    return new ToDoList(filtered);\n  }\n\n  toggleDoneStatus(item) {\n    let toggledItem = item.toggled();\n    console.log(`Marking item as ${toggledItem.doneStatus}`);\n\n    let items = this.list;\n    let split = items.indexOf(item);\n    let before = items.slice(0, split);\n    let after = items.slice(split + 1);\n    return new ToDoList([...before, toggledItem, ...after]);\n  }\n\n  setAllItemStatus(isDone) {\n    let adjusted = this.list.map(i => new ToDoItem({...i, isDone: isDone}));\n    return new ToDoList(adjusted);\n  }\n\n  areAnyLeftToDo() {\n    return this.list.some(i => i.isDone === false);\n  }\n  \n  areAnyDone() {\n    return this.list.some(i => i.isDone === true);\n  }\n\n  activeOrNot(test) {\n    return (test) ? \"active\" : \"inactive\";\n  }\n\n  checkAllStatus() {\n    return this.activeOrNot(this.areAnyLeftToDo());\n  }\n\n  uncheckAllStatus() {\n    return this.activeOrNot(this.areAnyDone());\n  }\n\n  unsortedStatus() {\n    return this.activeOrNot(!this.isSorted());\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}