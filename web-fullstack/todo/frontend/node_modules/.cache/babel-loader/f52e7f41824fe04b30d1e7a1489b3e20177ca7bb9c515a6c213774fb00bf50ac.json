{"ast":null,"code":"import{useContext}from\"react\";import ToDoContext from\"../store/ToDoContext\";import ToDoItem from\"../classes/ToDoItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NewTaskForm(){let context=useContext(ToDoContext);let items=context.get;let setItems=context.set;let draft=items.draftEntry;function addNewTask(event){event.preventDefault();let task=event.target.task.value;let deadline=event.target.deadline.value;if(deadline===\"\"){deadline=null;}if(task){let newTask=new ToDoItem({task,deadline});console.log(\"Add new task '\".concat(newTask.task,\"' with deadline '\").concat(newTask.deadline,\"'\"));setItems(prevItems=>prevItems.append(newTask));}event.target.reset();}return/*#__PURE__*/_jsxs(\"form\",{className:\"newItem\",onSubmit:addNewTask,autoComplete:\"off\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"newTaskInput\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"newTask\",children:\"New task:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"task\",id:\"newTask\",defaultValue:draft.task})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"deadlineInput\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"newDeadline\",children:\"Deadline (optional):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"deadline\",id:\"newDeadline\",defaultValue:draft.deadline}),/*#__PURE__*/_jsxs(\"p\",{className:\"instructions\",children:[\"Dates in natural language will be converted if possible\",/*#__PURE__*/_jsx(\"br\",{}),\"(Examples: \",/*#__PURE__*/_jsx(\"q\",{children:\"Tomorrow at 1pm,\"}),\" \",/*#__PURE__*/_jsx(\"q\",{children:\"A week from Thursday,\"}),\" \",/*#__PURE__*/_jsx(\"q\",{children:\"3/5 at 7am\"}),\")\"]})]}),/*#__PURE__*/_jsx(\"button\",{action:\"submit\",children:\"Add task\"})]});}export default NewTaskForm;","map":{"version":3,"names":["useContext","ToDoContext","ToDoItem","jsx","_jsx","jsxs","_jsxs","NewTaskForm","context","items","get","setItems","set","draft","draftEntry","addNewTask","event","preventDefault","task","target","value","deadline","newTask","console","log","concat","prevItems","append","reset","className","onSubmit","autoComplete","children","htmlFor","type","name","id","defaultValue","action"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/components/NewTaskForm.js"],"sourcesContent":["import { useContext } from \"react\";\nimport ToDoContext from \"../store/ToDoContext\";\nimport ToDoItem from \"../classes/ToDoItem\";\n\nfunction NewTaskForm() {\n  let context = useContext(ToDoContext);\n  let items = context.get;\n  let setItems = context.set;\n  let draft = items.draftEntry;\n\n  function addNewTask(event) {\n    event.preventDefault();\n\n    let task = event.target.task.value;\n\n    let deadline = event.target.deadline.value;\n    if (deadline === \"\") {\n      deadline = null;\n    }\n\n    if (task) {\n      let newTask = new ToDoItem({task, deadline});\n      console.log(`Add new task '${newTask.task}' with deadline '${newTask.deadline}'`);\n      setItems(prevItems => prevItems.append(newTask));\n    }\n    event.target.reset();\n  }\n\n  return(\n    <form className=\"newItem\" onSubmit={addNewTask} autoComplete=\"off\">\n      <div className=\"newTaskInput\">\n        <label htmlFor=\"newTask\">New task:</label>\n        <input type=\"text\" name=\"task\" id=\"newTask\" \n               defaultValue={draft.task} />\n      </div>\n      <div className=\"deadlineInput\">\n        <label htmlFor=\"newDeadline\">Deadline (optional):</label>\n        <input type=\"text\" name=\"deadline\" id=\"newDeadline\" \n               defaultValue={draft.deadline} />\n        <p className=\"instructions\">Dates in natural language will be converted if possible<br />\n        (Examples: <q>Tomorrow at 1pm,</q> <q>A week from Thursday,</q> <q>3/5 at 7am</q>)</p>\n      </div>\n      <button action=\"submit\">Add task</button>\n    </form>\n  );\n}\n\nexport default NewTaskForm;\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,MAAO,CAAAC,WAAW,KAAM,sBAAsB,CAC9C,MAAO,CAAAC,QAAQ,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3C,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,GAAI,CAAAC,OAAO,CAAGR,UAAU,CAACC,WAAW,CAAC,CACrC,GAAI,CAAAQ,KAAK,CAAGD,OAAO,CAACE,GAAG,CACvB,GAAI,CAAAC,QAAQ,CAAGH,OAAO,CAACI,GAAG,CAC1B,GAAI,CAAAC,KAAK,CAAGJ,KAAK,CAACK,UAAU,CAE5B,QAAS,CAAAC,UAAUA,CAACC,KAAK,CAAE,CACzBA,KAAK,CAACC,cAAc,CAAC,CAAC,CAEtB,GAAI,CAAAC,IAAI,CAAGF,KAAK,CAACG,MAAM,CAACD,IAAI,CAACE,KAAK,CAElC,GAAI,CAAAC,QAAQ,CAAGL,KAAK,CAACG,MAAM,CAACE,QAAQ,CAACD,KAAK,CAC1C,GAAIC,QAAQ,GAAK,EAAE,CAAE,CACnBA,QAAQ,CAAG,IAAI,CACjB,CAEA,GAAIH,IAAI,CAAE,CACR,GAAI,CAAAI,OAAO,CAAG,GAAI,CAAApB,QAAQ,CAAC,CAACgB,IAAI,CAAEG,QAAQ,CAAC,CAAC,CAC5CE,OAAO,CAACC,GAAG,kBAAAC,MAAA,CAAkBH,OAAO,CAACJ,IAAI,sBAAAO,MAAA,CAAoBH,OAAO,CAACD,QAAQ,KAAG,CAAC,CACjFV,QAAQ,CAACe,SAAS,EAAIA,SAAS,CAACC,MAAM,CAACL,OAAO,CAAC,CAAC,CAClD,CACAN,KAAK,CAACG,MAAM,CAACS,KAAK,CAAC,CAAC,CACtB,CAEA,mBACEtB,KAAA,SAAMuB,SAAS,CAAC,SAAS,CAACC,QAAQ,CAAEf,UAAW,CAACgB,YAAY,CAAC,KAAK,CAAAC,QAAA,eAChE1B,KAAA,QAAKuB,SAAS,CAAC,cAAc,CAAAG,QAAA,eAC3B5B,IAAA,UAAO6B,OAAO,CAAC,SAAS,CAAAD,QAAA,CAAC,WAAS,CAAO,CAAC,cAC1C5B,IAAA,UAAO8B,IAAI,CAAC,MAAM,CAACC,IAAI,CAAC,MAAM,CAACC,EAAE,CAAC,SAAS,CACpCC,YAAY,CAAExB,KAAK,CAACK,IAAK,CAAE,CAAC,EAChC,CAAC,cACNZ,KAAA,QAAKuB,SAAS,CAAC,eAAe,CAAAG,QAAA,eAC5B5B,IAAA,UAAO6B,OAAO,CAAC,aAAa,CAAAD,QAAA,CAAC,sBAAoB,CAAO,CAAC,cACzD5B,IAAA,UAAO8B,IAAI,CAAC,MAAM,CAACC,IAAI,CAAC,UAAU,CAACC,EAAE,CAAC,aAAa,CAC5CC,YAAY,CAAExB,KAAK,CAACQ,QAAS,CAAE,CAAC,cACvCf,KAAA,MAAGuB,SAAS,CAAC,cAAc,CAAAG,QAAA,EAAC,yDAAuD,cAAA5B,IAAA,QAAK,CAAC,cAC9E,cAAAA,IAAA,MAAA4B,QAAA,CAAG,kBAAgB,CAAG,CAAC,IAAC,cAAA5B,IAAA,MAAA4B,QAAA,CAAG,uBAAqB,CAAG,CAAC,IAAC,cAAA5B,IAAA,MAAA4B,QAAA,CAAG,YAAU,CAAG,CAAC,IAAC,EAAG,CAAC,EACnF,CAAC,cACN5B,IAAA,WAAQkC,MAAM,CAAC,QAAQ,CAAAN,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACrC,CAAC,CAEX,CAEA,cAAe,CAAAzB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}