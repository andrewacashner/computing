{"ast":null,"code":"'use strict';\n\nvar LocalizedParsingTokens = require('../var/LocalizedParsingTokens'),\n  getRegNonCapturing = require('./getRegNonCapturing');\nfunction getParsingTokenWithSuffix(field, src, suffix) {\n  var token = LocalizedParsingTokens[field];\n  if (token.requiresSuffix) {\n    src = getRegNonCapturing(src + getRegNonCapturing(suffix));\n  } else if (token.requiresSuffixOr) {\n    src += getRegNonCapturing(token.requiresSuffixOr + '|' + suffix);\n  } else {\n    src += getRegNonCapturing(suffix, true);\n  }\n  return src;\n}\nmodule.exports = getParsingTokenWithSuffix;","map":{"version":3,"names":["LocalizedParsingTokens","require","getRegNonCapturing","getParsingTokenWithSuffix","field","src","suffix","token","requiresSuffix","requiresSuffixOr","module","exports"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/node_modules/sugar-date/date/internal/getParsingTokenWithSuffix.js"],"sourcesContent":["'use strict';\n\nvar LocalizedParsingTokens = require('../var/LocalizedParsingTokens'),\n    getRegNonCapturing = require('./getRegNonCapturing');\n\nfunction getParsingTokenWithSuffix(field, src, suffix) {\n  var token = LocalizedParsingTokens[field];\n  if (token.requiresSuffix) {\n    src = getRegNonCapturing(src + getRegNonCapturing(suffix));\n  } else if (token.requiresSuffixOr) {\n    src += getRegNonCapturing(token.requiresSuffixOr + '|' + suffix);\n  } else {\n    src += getRegNonCapturing(suffix, true);\n  }\n  return src;\n}\n\nmodule.exports = getParsingTokenWithSuffix;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,+BAA+B,CAAC;EACjEC,kBAAkB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAExD,SAASE,yBAAyBA,CAACC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAE;EACrD,IAAIC,KAAK,GAAGP,sBAAsB,CAACI,KAAK,CAAC;EACzC,IAAIG,KAAK,CAACC,cAAc,EAAE;IACxBH,GAAG,GAAGH,kBAAkB,CAACG,GAAG,GAAGH,kBAAkB,CAACI,MAAM,CAAC,CAAC;EAC5D,CAAC,MAAM,IAAIC,KAAK,CAACE,gBAAgB,EAAE;IACjCJ,GAAG,IAAIH,kBAAkB,CAACK,KAAK,CAACE,gBAAgB,GAAG,GAAG,GAAGH,MAAM,CAAC;EAClE,CAAC,MAAM;IACLD,GAAG,IAAIH,kBAAkB,CAACI,MAAM,EAAE,IAAI,CAAC;EACzC;EACA,OAAOD,GAAG;AACZ;AAEAK,MAAM,CAACC,OAAO,GAAGR,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}