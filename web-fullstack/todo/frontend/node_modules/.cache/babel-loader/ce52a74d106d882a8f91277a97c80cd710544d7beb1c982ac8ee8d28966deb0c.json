{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js\",\n  _s = $RefreshSig$();\n// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// (done) Break up into separate class and component files\n// (done) Use props consistently for components to pass state\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { ToDoList } from \"./classes/ToDoItem\";\nimport FormContext from \"./store/FormContext\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let itemState = useState(new ToDoList());\n  let formState = useState({\n    task: \"\",\n    deadline: \"\"\n  });\n  const emptyTask = {\n    task: \"\",\n    deadline: \"\"\n  };\n  let [defaults, setDefaults] = useState(emptyTask);\n  let formContextValue = {\n    defaults: defaults,\n    updateDefaults: setDefaults,\n    resetDefaults: () => setDefaults(emptyTask)\n  };\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: formContextValue,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instructions\",\n          children: \"Add a new task using the form below. Drag to rearrange tasks.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          items: itemState,\n          form: formState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckAllButton, {\n          items: itemState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n        items: itemState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uJg/7UiYq3UkmoB69m0fDmjW0Bo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ToDoList","FormContext","TaskList","CheckAllButton","NewTaskForm","jsxDEV","_jsxDEV","App","_s","itemState","formState","task","deadline","emptyTask","defaults","setDefaults","formContextValue","updateDefaults","resetDefaults","Provider","value","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","items","form","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js"],"sourcesContent":["// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// (done) Break up into separate class and component files\n// (done) Use props consistently for components to pass state\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { ToDoList } from \"./classes/ToDoItem\";\nimport FormContext from \"./store/FormContext\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\n\nfunction App() {\n  let itemState = useState(new ToDoList());\n  let formState = useState({ task: \"\", deadline: \"\" });\n  \n  const emptyTask = {task: \"\", deadline: \"\"};\n  let [defaults, setDefaults] = useState(emptyTask);\n  let formContextValue = {\n    defaults: defaults,\n    updateDefaults: setDefaults,\n    resetDefaults: () => setDefaults(emptyTask)\n  };\n\n  return(\n    <FormContext.Provider value={formContextValue}>\n      <section id=\"todo\">\n        <div className=\"todoList\">\n          <h1>To Do</h1>\n          <p className=\"instructions\">Add a new task using the form below. Drag to rearrange tasks.</p>\n          <TaskList items={itemState} form={formState} />\n          <CheckAllButton items={itemState} />\n        </div>\n          <NewTaskForm items={itemState} />\n      </section>\n    </FormContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,SAAS,GAAGV,QAAQ,CAAC,IAAIC,QAAQ,CAAC,CAAC,CAAC;EACxC,IAAIU,SAAS,GAAGX,QAAQ,CAAC;IAAEY,IAAI,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAEpD,MAAMC,SAAS,GAAG;IAACF,IAAI,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC;EAC1C,IAAI,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAACc,SAAS,CAAC;EACjD,IAAIG,gBAAgB,GAAG;IACrBF,QAAQ,EAAEA,QAAQ;IAClBG,cAAc,EAAEF,WAAW;IAC3BG,aAAa,EAAEA,CAAA,KAAMH,WAAW,CAACF,SAAS;EAC5C,CAAC;EAED,oBACEP,OAAA,CAACL,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAEJ,gBAAiB;IAAAK,QAAA,eAC5Cf,OAAA;MAASgB,EAAE,EAAC,MAAM;MAAAD,QAAA,gBAChBf,OAAA;QAAKiB,SAAS,EAAC,UAAU;QAAAF,QAAA,gBACvBf,OAAA;UAAAe,QAAA,EAAI;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdrB,OAAA;UAAGiB,SAAS,EAAC,cAAc;UAAAF,QAAA,EAAC;QAA6D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7FrB,OAAA,CAACJ,QAAQ;UAAC0B,KAAK,EAAEnB,SAAU;UAACoB,IAAI,EAAEnB;QAAU;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/CrB,OAAA,CAACH,cAAc;UAACyB,KAAK,EAAEnB;QAAU;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACJrB,OAAA,CAACF,WAAW;QAACwB,KAAK,EAAEnB;MAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE3B;AAACnB,EAAA,CAzBQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}