{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/routes/ToDo.js\",\n  _s = $RefreshSig$();\n// To Do list\n// Andrew Cashner\n// 2024/02/23\n\nimport { useState } from \"react\";\nimport ToDoContext from \"../store/ToDoContext\";\nimport ToDoItem from \"../classes/ToDoItem\";\nimport ToDoList from \"../classes/ToDoList\";\nimport TaskList from \"../components/TaskList\";\nimport CheckAllButton from \"../components/CheckAllButton\";\nimport NewTaskForm from \"../components/NewTaskForm\";\nimport ListForTesting from \"../components/ListForTesting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDo() {\n  _s();\n  const emptyList = () => new ToDoList();\n  let [items, setItems] = useState(emptyList());\n  let toDoContextValue = {\n    get: items,\n    set: setItems,\n    reset: () => setItems(emptyList())\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(ListForTesting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoContext.Provider, {\n      value: toDoContextValue,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoList\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"instructions\",\n            children: \"Add a new task using the form below. Drag to rearrange tasks.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckAllButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDo, \"YFBVxdcKNriOQIxlmRAk/P51jk0=\");\n_c = ToDo;\nexport default ToDo;\nexport async function loader() {\n  let response = await fetch(\"./cashner.json\");\n  if (!response.ok) {\n    throw new Error(\"Could not access user data\");\n  }\n  let json = await response.json();\n  let items = json.map(i => new ToDoItem(i));\n  let todo = new ToDoList(items);\n  return todo;\n}\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["useState","ToDoContext","ToDoItem","ToDoList","TaskList","CheckAllButton","NewTaskForm","ListForTesting","jsxDEV","_jsxDEV","ToDo","_s","emptyList","items","setItems","toDoContextValue","get","set","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","id","className","_c","loader","response","fetch","ok","Error","json","map","i","todo","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/routes/ToDo.js"],"sourcesContent":["// To Do list\n// Andrew Cashner\n// 2024/02/23\n\nimport { useState } from \"react\";\nimport ToDoContext from \"../store/ToDoContext\";\n\nimport ToDoItem from \"../classes/ToDoItem\";\nimport ToDoList from \"../classes/ToDoList\";\n\nimport TaskList from \"../components/TaskList\";\nimport CheckAllButton from \"../components/CheckAllButton\";\nimport NewTaskForm from \"../components/NewTaskForm\";\n\nimport ListForTesting from \"../components/ListForTesting\";\n\nfunction ToDo() {\n\n  const emptyList = () => new ToDoList();\n  let [items, setItems] = useState(emptyList());\n\n  let toDoContextValue = {\n    get: items,\n    set: setItems,\n    reset: () => setItems(emptyList())\n  }\n\n  return(\n    <main>\n      <ListForTesting />\n      <ToDoContext.Provider value={toDoContextValue}>\n        <section id=\"todo\">\n          <div className=\"todoList\">\n            <h1>Tasks</h1>\n            <p className=\"instructions\">Add a new task using the form below. Drag to rearrange tasks.</p>\n            <TaskList />\n            <CheckAllButton />\n          </div>\n            <NewTaskForm />\n        </section>\n      </ToDoContext.Provider>\n    </main>\n  );\n}\n\nexport default ToDo;\n\nexport async function loader() {\n  let response = await fetch(\"./cashner.json\");\n  if (!response.ok) {\n    throw new Error(\"Could not access user data\");\n  }\n  let json = await response.json();\n  let items = json.map(i => new ToDoItem(i));\n  let todo = new ToDoList(items);\n  return todo;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}