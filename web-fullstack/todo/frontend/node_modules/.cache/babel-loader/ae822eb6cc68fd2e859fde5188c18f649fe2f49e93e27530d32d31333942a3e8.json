{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js\",\n  _s = $RefreshSig$();\n// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// (done) Break up into separate class and component files\n// (done) Use props consistently for components to pass state\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Utilities from \"./classes/Utilities\";\nimport { ToDoItem, ToDoList } from \"./classes/ToDoItem\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [items, setItems] = useState(new ToDoList());\n  let updateItems = newItems => setItems(new ToDoList(...newItems));\n  let [formDefaults, setFormDefaults] = useState({\n    task: \"\",\n    deadline: \"\"\n  });\n  let itemState = {\n    obj: items,\n    fn: updateItems\n  };\n  let formState = {\n    obj: formDefaults,\n    fn: setFormDefaults\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Add a new task using the form below. Drag to rearrange tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        itemState: itemState,\n        formState: formState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckAllButton, {\n        itemState: itemState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      itemState: itemState,\n      formState: formState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CZ41IQxZw0kxmsAWXeZ6VtovCnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Utilities","ToDoItem","ToDoList","TaskList","CheckAllButton","NewTaskForm","jsxDEV","_jsxDEV","App","_s","items","setItems","updateItems","newItems","formDefaults","setFormDefaults","task","deadline","itemState","obj","fn","formState","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js"],"sourcesContent":["// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// (done) Break up into separate class and component files\n// (done) Use props consistently for components to pass state\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Utilities from \"./classes/Utilities\";\nimport { ToDoItem, ToDoList } from \"./classes/ToDoItem\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\n\nfunction App() {\n  let [items, setItems] = useState(new ToDoList());\n  let updateItems = (newItems) => setItems(new ToDoList(...newItems));\n\n  let [formDefaults, setFormDefaults] = useState({ task: \"\", deadline: \"\" });\n\n  let itemState = {obj: items, fn: updateItems};\n  let formState = {obj: formDefaults, fn: setFormDefaults};\n\n  return(\n    <section id=\"todo\">\n      <div className=\"todoList\">\n        <h1>To Do</h1>\n        <p className=\"instructions\">Add a new task using the form below. Drag to rearrange tasks.</p>\n        <TaskList itemState={itemState} formState={formState} />\n        <CheckAllButton itemState={itemState} />\n      </div>\n      <NewTaskForm itemState={itemState} formState={formState} />\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AACvD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAIG,QAAQ,CAAC,CAAC,CAAC;EAChD,IAAIU,WAAW,GAAIC,QAAQ,IAAKF,QAAQ,CAAC,IAAIT,QAAQ,CAAC,GAAGW,QAAQ,CAAC,CAAC;EAEnE,IAAI,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,IAAI,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE1E,IAAIC,SAAS,GAAG;IAACC,GAAG,EAAET,KAAK;IAAEU,EAAE,EAAER;EAAW,CAAC;EAC7C,IAAIS,SAAS,GAAG;IAACF,GAAG,EAAEL,YAAY;IAAEM,EAAE,EAAEL;EAAe,CAAC;EAExD,oBACER,OAAA;IAASe,EAAE,EAAC,MAAM;IAAAC,QAAA,gBAChBhB,OAAA;MAAKiB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACvBhB,OAAA;QAAAgB,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdrB,OAAA;QAAGiB,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAC;MAA6D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7FrB,OAAA,CAACJ,QAAQ;QAACe,SAAS,EAAEA,SAAU;QAACG,SAAS,EAAEA;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxDrB,OAAA,CAACH,cAAc;QAACc,SAAS,EAAEA;MAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACNrB,OAAA,CAACF,WAAW;MAACa,SAAS,EAAEA,SAAU;MAACG,SAAS,EAAEA;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd;AAACnB,EAAA,CApBQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}