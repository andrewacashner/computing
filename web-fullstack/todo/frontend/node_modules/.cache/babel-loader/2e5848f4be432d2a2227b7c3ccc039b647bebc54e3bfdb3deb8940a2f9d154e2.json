{"ast":null,"code":"import ToDoItem from \"./ToDoItem\";\nexport default class ToDoList {\n  constructor(...list) {\n    this.list = [list];\n  }\n  partition(testFn) {\n    let results = {\n      true: [],\n      false: []\n    };\n    console.log(this.list);\n    console.log(this.list instanceof Array);\n    this.list.forEach(i => results[testFn(i)].push(i));\n    return [results.true, results.false];\n  }\n  toSortedByDate() {\n    let [deadlines, noDeadlines] = this.partition(i => i.deadline !== null);\n    let [dates, noDates] = deadlines.partition(i => i.deadlineDate !== null);\n    let datesSorted = dates.toSorted((a, b) => a.deadlineDate - b.deadlineDate);\n    function stringCompareFn(a, b) {\n      [a, b] = [a, b].map(i => i.toLowerCase());\n      if (a < b) return -1;else if (a > b) return 1;else return 0;\n    }\n    let noDatesSorted = noDates.toSorted((a, b) => stringCompareFn(a.deadline, b.deadline));\n    let noDeadlinesSorted = noDeadlines.toSorted((a, b) => stringCompareFn(a.task, b.task));\n    let newItems = [...noDeadlinesSorted, ...noDatesSorted, ...datesSorted];\n    return new ToDoList(newItems);\n  }\n  isSorted() {\n    let sorted = this.toSortedByDate();\n    let compared = this.list.map((item, index) => item === sorted[index]);\n    let tested = compared.every(i => i === true);\n    return tested;\n  }\n  append(item) {\n    return new ToDoList([...this.list, item]);\n  }\n  moveWithinArray(fromID, toID) {\n    console.log(`Move from item ${fromID} to item ${toID}`);\n    function insertBefore(array, matchFn, item) {\n      let insertPoint = array.findIndex(matchFn);\n      let before = array.slice(0, insertPoint);\n      let after = array.slice(insertPoint);\n      return [...before, item, ...after];\n    }\n    let itemToMove = this.list.find(i => i.id === fromID);\n    let rest = this.list.filter(i => i !== itemToMove);\n    let newItems = [];\n    if (toID === \"bottom\") {\n      console.log(\"Move item to bottom\");\n      newItems = [...rest, itemToMove];\n    } else {\n      console.log(\"Insert item\");\n      newItems = insertBefore(rest, i => i.id === toID, itemToMove);\n    }\n    return new ToDoList(newItems);\n  }\n  removeItem(item) {\n    let filtered = this.list.filter(i => i !== item);\n    return new ToDoList(filtered);\n  }\n  toggleDoneStatus(item) {\n    let toggledItem = item.toggled();\n    console.log(`Marking item as ${toggledItem.doneStatus}`);\n    let items = this.list;\n    let split = items.indexOf(item);\n    let before = items.slice(0, split);\n    let after = items.slice(split + 1);\n    return new ToDoList([...before, toggledItem, ...after]);\n  }\n  setAllItemStatus(isDone) {\n    let adjusted = this.list.map(i => new ToDoItem({\n      ...i,\n      isDone: isDone\n    }));\n    return new ToDoList(adjusted);\n  }\n  areAnyLeftToDo() {\n    return this.list.some(i => i.isDone === false);\n  }\n  areAnyDone() {\n    return this.list.some(i => i.isDone === true);\n  }\n}","map":{"version":3,"names":["ToDoItem","ToDoList","constructor","list","partition","testFn","results","true","false","console","log","Array","forEach","i","push","toSortedByDate","deadlines","noDeadlines","deadline","dates","noDates","deadlineDate","datesSorted","toSorted","a","b","stringCompareFn","map","toLowerCase","noDatesSorted","noDeadlinesSorted","task","newItems","isSorted","sorted","compared","item","index","tested","every","append","moveWithinArray","fromID","toID","insertBefore","array","matchFn","insertPoint","findIndex","before","slice","after","itemToMove","find","id","rest","filter","removeItem","filtered","toggleDoneStatus","toggledItem","toggled","doneStatus","items","split","indexOf","setAllItemStatus","isDone","adjusted","areAnyLeftToDo","some","areAnyDone"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/classes/ToDoList.js"],"sourcesContent":["import ToDoItem from \"./ToDoItem\";\n\nexport default class ToDoList {\n  list;\n\n  constructor(...list) {\n    this.list = [list];\n  }\n\n  partition(testFn) {\n    let results = { true: [], false: [] };\n    console.log(this.list);\n    console.log(this.list instanceof Array);\n    this.list.forEach(i => results[testFn(i)].push(i));\n    return [results.true, results.false];\n  }\n\n  toSortedByDate() {\n    let [deadlines, noDeadlines] = this.partition(i => i.deadline !== null);\n\n    let [dates, noDates] = deadlines.partition(i => i.deadlineDate !== null);\n\n    let datesSorted = dates.toSorted(\n      (a, b) => a.deadlineDate - b.deadlineDate);\n\n    function stringCompareFn(a, b) {\n      [a, b] = [a, b].map(i => i.toLowerCase());\n      if (a < b) return -1;\n      else if (a > b) return 1;\n      else return 0;\n    }\n\n    let noDatesSorted = noDates.toSorted(\n      (a, b) => stringCompareFn(a.deadline, b.deadline));\n\n    let noDeadlinesSorted = noDeadlines.toSorted(\n      (a, b) => stringCompareFn(a.task, b.task));\n\n    let newItems = [...noDeadlinesSorted, ...noDatesSorted, ...datesSorted];\n    return new ToDoList(newItems);\n  }\n\n  isSorted() {\n    let sorted = this.toSortedByDate();\n    let compared = this.list.map((item, index) => item === sorted[index]);\n    let tested = compared.every(i => i === true);\n    return tested;\n  }\n\n  append(item) {\n    return new ToDoList([...this.list, item]);\n  }\n\n  moveWithinArray(fromID, toID) {\n    console.log(`Move from item ${fromID} to item ${toID}`);\n    function insertBefore(array, matchFn, item) {\n      let insertPoint = array.findIndex(matchFn);\n      let before = array.slice(0, insertPoint);\n      let after = array.slice(insertPoint);\n      return [...before, item, ...after];\n    }\n\n    let itemToMove = this.list.find(i => i.id === fromID);\n    let rest = this.list.filter(i => i !== itemToMove);\n\n    let newItems = [];\n    if (toID === \"bottom\") {\n      console.log(\"Move item to bottom\");\n      newItems = [...rest, itemToMove];\n    } else {\n      console.log(\"Insert item\");\n      newItems = insertBefore(rest, (i => i.id === toID), itemToMove);\n    }\n    return new ToDoList(newItems);\n  }\n\n  removeItem(item) { \n    let filtered = this.list.filter(i => i !== item);\n    return new ToDoList(filtered);\n  }\n\n  toggleDoneStatus(item) {\n    let toggledItem = item.toggled();\n    console.log(`Marking item as ${toggledItem.doneStatus}`);\n\n    let items = this.list;\n    let split = items.indexOf(item);\n    let before = items.slice(0, split);\n    let after = items.slice(split + 1);\n    return new ToDoList([...before, toggledItem, ...after]);\n  }\n\n  setAllItemStatus(isDone) {\n    let adjusted = this.list.map(i => new ToDoItem({...i, isDone: isDone}));\n    return new ToDoList(adjusted);\n  }\n\n  areAnyLeftToDo() {\n    return this.list.some(i => i.isDone === false);\n  }\n  \n  areAnyDone() {\n    return this.list.some(i => i.isDone === true);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}