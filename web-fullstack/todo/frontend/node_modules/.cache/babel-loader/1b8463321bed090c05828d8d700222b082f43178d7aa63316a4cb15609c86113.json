{"ast":null,"code":"import Sugar from\"sugar-date\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default class ToDoItem{constructor(){let{task=\"\",deadline=null,isDone=false}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.task=task;this.deadline=deadline;this.deadlineDate=ToDoItem.dateFromString(deadline);this.isDone=isDone;this.id=crypto.randomUUID();}clone(){return new ToDoItem(this);}static dateFromString(deadline){let test,date;if(deadline){test=Sugar.Date.create(deadline);date=new Sugar.Date(test).isValid().valueOf()?test:null;}else{date=null;}return date;}get deadlineString(){if(this.deadlineDate){return\"(\".concat(Sugar.Date.format(this.deadlineDate,\"%c\"),\")\");}else if(this.deadline){return\"(\".concat(this.deadline,\")\");}else{return\"\";}}get doneStatus(){return this.isDone?\"done\":\"notDone\";}get activeStatus(){return this.isDone?\"inactive\":\"active\";}toggled(){return new ToDoItem({...this,isDone:!this.isDone});}Span(){return function(){let deadlineClassList=\"todoDeadline\";let test=new Sugar.Date(this.deadlineDate);if(this.deadlineDate&&test.isPast().valueOf()){deadlineClassList+=\" pastDue\";}return/*#__PURE__*/_jsxs(\"span\",{className:\"todoItem\",children:[this.task,/*#__PURE__*/_jsx(\"span\",{className:deadlineClassList,children:this.deadlineString})]});}.bind(this);}}","map":{"version":3,"names":["Sugar","jsx","_jsx","jsxs","_jsxs","ToDoItem","constructor","task","deadline","isDone","arguments","length","undefined","deadlineDate","dateFromString","id","crypto","randomUUID","clone","test","date","Date","create","isValid","valueOf","deadlineString","concat","format","doneStatus","activeStatus","toggled","Span","deadlineClassList","isPast","className","children","bind"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/classes/ToDoItem.js"],"sourcesContent":["import Sugar from \"sugar-date\";\n\nexport default class ToDoItem {\n  task;\n  deadline;\n  deadlineDate;\n  isDone;\n  id;\n\n  constructor({task = \"\", deadline = null, isDone = false} = {}) {\n    this.task = task;\n    this.deadline = deadline;\n    this.deadlineDate = ToDoItem.dateFromString(deadline);\n    this.isDone = isDone;\n    this.id = crypto.randomUUID();\n  }\n\n  clone() {\n    return new ToDoItem(this);\n  }\n  \n  static dateFromString(deadline) {\n    let test, date;\n    if (deadline) {\n      test = Sugar.Date.create(deadline);\n      date = (new Sugar.Date(test).isValid().valueOf()) ? test : null;\n    } else {\n      date = null;\n    }\n    return date;\n  }\n\n  get deadlineString() {\n    if (this.deadlineDate) {\n      return `(${Sugar.Date.format(this.deadlineDate, \"%c\")})`;\n    } else if (this.deadline) {\n      return `(${this.deadline})`;\n    } else {\n      return \"\";\n    }\n  }\n\n  get doneStatus() {\n    return (this.isDone) ? \"done\" : \"notDone\";\n  }\n\n  get activeStatus() {\n    return (this.isDone) ? \"inactive\" : \"active\";\n  }\n\n  toggled() {\n    return new ToDoItem({...this, isDone: !this.isDone});\n  }\n\n  Span() {\n    return function() {\n      let deadlineClassList = \"todoDeadline\";\n\n      let test = new Sugar.Date(this.deadlineDate);\n      if (this.deadlineDate && test.isPast().valueOf()) {\n        deadlineClassList += \" pastDue\";\n      }\n\n      return(\n        <span className=\"todoItem\">\n          {this.task}\n          <span className={deadlineClassList}>{this.deadlineString}</span>\n        </span>\n      );\n    }.bind(this);\n  }\n}\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/B,cAAe,MAAM,CAAAC,QAAS,CAO5BC,WAAWA,CAAA,CAAoD,IAAnD,CAACC,IAAI,CAAG,EAAE,CAAEC,QAAQ,CAAG,IAAI,CAAEC,MAAM,CAAG,KAAK,CAAC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC3D,IAAI,CAACH,IAAI,CAAGA,IAAI,CAChB,IAAI,CAACC,QAAQ,CAAGA,QAAQ,CACxB,IAAI,CAACK,YAAY,CAAGR,QAAQ,CAACS,cAAc,CAACN,QAAQ,CAAC,CACrD,IAAI,CAACC,MAAM,CAAGA,MAAM,CACpB,IAAI,CAACM,EAAE,CAAGC,MAAM,CAACC,UAAU,CAAC,CAAC,CAC/B,CAEAC,KAAKA,CAAA,CAAG,CACN,MAAO,IAAI,CAAAb,QAAQ,CAAC,IAAI,CAAC,CAC3B,CAEA,MAAO,CAAAS,cAAcA,CAACN,QAAQ,CAAE,CAC9B,GAAI,CAAAW,IAAI,CAAEC,IAAI,CACd,GAAIZ,QAAQ,CAAE,CACZW,IAAI,CAAGnB,KAAK,CAACqB,IAAI,CAACC,MAAM,CAACd,QAAQ,CAAC,CAClCY,IAAI,CAAI,GAAI,CAAApB,KAAK,CAACqB,IAAI,CAACF,IAAI,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAIL,IAAI,CAAG,IAAI,CACjE,CAAC,IAAM,CACLC,IAAI,CAAG,IAAI,CACb,CACA,MAAO,CAAAA,IAAI,CACb,CAEA,GAAI,CAAAK,cAAcA,CAAA,CAAG,CACnB,GAAI,IAAI,CAACZ,YAAY,CAAE,CACrB,UAAAa,MAAA,CAAW1B,KAAK,CAACqB,IAAI,CAACM,MAAM,CAAC,IAAI,CAACd,YAAY,CAAE,IAAI,CAAC,MACvD,CAAC,IAAM,IAAI,IAAI,CAACL,QAAQ,CAAE,CACxB,UAAAkB,MAAA,CAAW,IAAI,CAAClB,QAAQ,MAC1B,CAAC,IAAM,CACL,MAAO,EAAE,CACX,CACF,CAEA,GAAI,CAAAoB,UAAUA,CAAA,CAAG,CACf,MAAQ,KAAI,CAACnB,MAAM,CAAI,MAAM,CAAG,SAAS,CAC3C,CAEA,GAAI,CAAAoB,YAAYA,CAAA,CAAG,CACjB,MAAQ,KAAI,CAACpB,MAAM,CAAI,UAAU,CAAG,QAAQ,CAC9C,CAEAqB,OAAOA,CAAA,CAAG,CACR,MAAO,IAAI,CAAAzB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAEI,MAAM,CAAE,CAAC,IAAI,CAACA,MAAM,CAAC,CAAC,CACtD,CAEAsB,IAAIA,CAAA,CAAG,CACL,MAAO,WAAW,CAChB,GAAI,CAAAC,iBAAiB,CAAG,cAAc,CAEtC,GAAI,CAAAb,IAAI,CAAG,GAAI,CAAAnB,KAAK,CAACqB,IAAI,CAAC,IAAI,CAACR,YAAY,CAAC,CAC5C,GAAI,IAAI,CAACA,YAAY,EAAIM,IAAI,CAACc,MAAM,CAAC,CAAC,CAACT,OAAO,CAAC,CAAC,CAAE,CAChDQ,iBAAiB,EAAI,UAAU,CACjC,CAEA,mBACE5B,KAAA,SAAM8B,SAAS,CAAC,UAAU,CAAAC,QAAA,EACvB,IAAI,CAAC5B,IAAI,cACVL,IAAA,SAAMgC,SAAS,CAAEF,iBAAkB,CAAAG,QAAA,CAAE,IAAI,CAACV,cAAc,CAAO,CAAC,EAC5D,CAAC,CAEX,CAAC,CAACW,IAAI,CAAC,IAAI,CAAC,CACd,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}