{"ast":null,"code":"import ToDoItem from \"./ToDoItem\";\nexport default class ToDoList {\n  constructor(list) {\n    this.list = [...list];\n  }\n  partition(testFn) {\n    if (this.list.length > 0) {\n      let results = {\n        true: new ToDoList([]),\n        false: new ToDoList([])\n      };\n      this.list.forEach(i => results[testFn(i)].append(i));\n      return [results.true, results.false];\n    } else return [null, null];\n  }\n  toSortedByDate() {\n    let [deadlines, noDeadlines] = this.partition(i => i.deadline !== null);\n    let [dates, noDates] = deadlines.partition(i => i.deadlineDate !== null);\n    let datesSorted = dates.toSorted((a, b) => a.deadlineDate - b.deadlineDate);\n    function stringCompareFn(a, b) {\n      [a, b] = [a, b].map(i => i.toLowerCase());\n      if (a < b) return -1;else if (a > b) return 1;else return 0;\n    }\n    let noDatesSorted = noDates.toSorted((a, b) => stringCompareFn(a.deadline, b.deadline));\n    let noDeadlinesSorted = noDeadlines.toSorted((a, b) => stringCompareFn(a.task, b.task));\n    let newItems = [...noDeadlinesSorted, ...noDatesSorted, ...datesSorted];\n    return new ToDoList(newItems);\n  }\n  isSorted() {\n    let sorted = this.toSortedByDate();\n    let compared = this.list.map((item, index) => item === sorted[index]);\n    let tested = compared.every(i => i === true);\n    return tested;\n  }\n  append(item) {\n    return new ToDoList([...this.list, item]);\n  }\n  moveWithinArray(fromID, toID) {\n    console.log(`Move from item ${fromID} to item ${toID}`);\n    function insertBefore(array, matchFn, item) {\n      let insertPoint = array.findIndex(matchFn);\n      let before = array.slice(0, insertPoint);\n      let after = array.slice(insertPoint);\n      return [...before, item, ...after];\n    }\n    let itemToMove = this.list.find(i => i.id === fromID);\n    let rest = this.list.filter(i => i !== itemToMove);\n    let newItems = [];\n    if (toID === \"bottom\") {\n      console.log(\"Move item to bottom\");\n      newItems = [...rest, itemToMove];\n    } else {\n      console.log(\"Insert item\");\n      newItems = insertBefore(rest, i => i.id === toID, itemToMove);\n    }\n    return new ToDoList(newItems);\n  }\n  removeItem(item) {\n    let filtered = this.list.filter(i => i !== item);\n    return new ToDoList(filtered);\n  }\n  toggleDoneStatus(item) {\n    let toggledItem = item.toggled();\n    console.log(`Marking item as ${toggledItem.doneStatus}`);\n    let items = this.list;\n    let split = items.indexOf(item);\n    let before = items.slice(0, split);\n    let after = items.slice(split + 1);\n    return new ToDoList([...before, toggledItem, ...after]);\n  }\n  setAllItemStatus(isDone) {\n    let adjusted = this.list.map(i => new ToDoItem({\n      ...i,\n      isDone: isDone\n    }));\n    return new ToDoList(adjusted);\n  }\n  areAnyLeftToDo() {\n    return this.list.some(i => i.isDone === false);\n  }\n  areAnyDone() {\n    return this.list.some(i => i.isDone === true);\n  }\n}","map":{"version":3,"names":["ToDoItem","ToDoList","constructor","list","partition","testFn","length","results","true","false","forEach","i","append","toSortedByDate","deadlines","noDeadlines","deadline","dates","noDates","deadlineDate","datesSorted","toSorted","a","b","stringCompareFn","map","toLowerCase","noDatesSorted","noDeadlinesSorted","task","newItems","isSorted","sorted","compared","item","index","tested","every","moveWithinArray","fromID","toID","console","log","insertBefore","array","matchFn","insertPoint","findIndex","before","slice","after","itemToMove","find","id","rest","filter","removeItem","filtered","toggleDoneStatus","toggledItem","toggled","doneStatus","items","split","indexOf","setAllItemStatus","isDone","adjusted","areAnyLeftToDo","some","areAnyDone"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/classes/ToDoList.js"],"sourcesContent":["import ToDoItem from \"./ToDoItem\";\n\nexport default class ToDoList {\n  list;\n\n  constructor(list) {\n    this.list = [...list];\n  }\n\n  partition(testFn) {\n    if (this.list.length > 0) {\n      let results = { \n        true: new ToDoList([]), \n        false: new ToDoList([]) \n      };\n\n      this.list.forEach(i => results[testFn(i)].append(i));\n      return [results.true, results.false];\n    } else return [null, null];\n  }\n\n  toSortedByDate() {\n    let [deadlines, noDeadlines] = this.partition(i => i.deadline !== null);\n\n    let [dates, noDates] = deadlines.partition(i => i.deadlineDate !== null);\n\n    let datesSorted = dates.toSorted(\n      (a, b) => a.deadlineDate - b.deadlineDate);\n\n    function stringCompareFn(a, b) {\n      [a, b] = [a, b].map(i => i.toLowerCase());\n      if (a < b) return -1;\n      else if (a > b) return 1;\n      else return 0;\n    }\n\n    let noDatesSorted = noDates.toSorted(\n      (a, b) => stringCompareFn(a.deadline, b.deadline));\n\n    let noDeadlinesSorted = noDeadlines.toSorted(\n      (a, b) => stringCompareFn(a.task, b.task));\n\n    let newItems = [...noDeadlinesSorted, ...noDatesSorted, ...datesSorted];\n    return new ToDoList(newItems);\n  }\n\n  isSorted() {\n    let sorted = this.toSortedByDate();\n    let compared = this.list.map((item, index) => item === sorted[index]);\n    let tested = compared.every(i => i === true);\n    return tested;\n  }\n\n  append(item) {\n    return new ToDoList([...this.list, item]);\n  }\n\n  moveWithinArray(fromID, toID) {\n    console.log(`Move from item ${fromID} to item ${toID}`);\n    function insertBefore(array, matchFn, item) {\n      let insertPoint = array.findIndex(matchFn);\n      let before = array.slice(0, insertPoint);\n      let after = array.slice(insertPoint);\n      return [...before, item, ...after];\n    }\n\n    let itemToMove = this.list.find(i => i.id === fromID);\n    let rest = this.list.filter(i => i !== itemToMove);\n\n    let newItems = [];\n    if (toID === \"bottom\") {\n      console.log(\"Move item to bottom\");\n      newItems = [...rest, itemToMove];\n    } else {\n      console.log(\"Insert item\");\n      newItems = insertBefore(rest, (i => i.id === toID), itemToMove);\n    }\n    return new ToDoList(newItems);\n  }\n\n  removeItem(item) { \n    let filtered = this.list.filter(i => i !== item);\n    return new ToDoList(filtered);\n  }\n\n  toggleDoneStatus(item) {\n    let toggledItem = item.toggled();\n    console.log(`Marking item as ${toggledItem.doneStatus}`);\n\n    let items = this.list;\n    let split = items.indexOf(item);\n    let before = items.slice(0, split);\n    let after = items.slice(split + 1);\n    return new ToDoList([...before, toggledItem, ...after]);\n  }\n\n  setAllItemStatus(isDone) {\n    let adjusted = this.list.map(i => new ToDoItem({...i, isDone: isDone}));\n    return new ToDoList(adjusted);\n  }\n\n  areAnyLeftToDo() {\n    return this.list.some(i => i.isDone === false);\n  }\n  \n  areAnyDone() {\n    return this.list.some(i => i.isDone === true);\n  }\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjC,eAAe,MAAMC,QAAQ,CAAC;EAG5BC,WAAWA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,GAAG,CAAC,GAAGA,IAAI,CAAC;EACvB;EAEAC,SAASA,CAACC,MAAM,EAAE;IAChB,IAAI,IAAI,CAACF,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;MACxB,IAAIC,OAAO,GAAG;QACZC,IAAI,EAAE,IAAIP,QAAQ,CAAC,EAAE,CAAC;QACtBQ,KAAK,EAAE,IAAIR,QAAQ,CAAC,EAAE;MACxB,CAAC;MAED,IAAI,CAACE,IAAI,CAACO,OAAO,CAACC,CAAC,IAAIJ,OAAO,CAACF,MAAM,CAACM,CAAC,CAAC,CAAC,CAACC,MAAM,CAACD,CAAC,CAAC,CAAC;MACpD,OAAO,CAACJ,OAAO,CAACC,IAAI,EAAED,OAAO,CAACE,KAAK,CAAC;IACtC,CAAC,MAAM,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;EAC5B;EAEAI,cAAcA,CAAA,EAAG;IACf,IAAI,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAG,IAAI,CAACX,SAAS,CAACO,CAAC,IAAIA,CAAC,CAACK,QAAQ,KAAK,IAAI,CAAC;IAEvE,IAAI,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGJ,SAAS,CAACV,SAAS,CAACO,CAAC,IAAIA,CAAC,CAACQ,YAAY,KAAK,IAAI,CAAC;IAExE,IAAIC,WAAW,GAAGH,KAAK,CAACI,QAAQ,CAC9B,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACH,YAAY,GAAGI,CAAC,CAACJ,YAAY,CAAC;IAE5C,SAASK,eAAeA,CAACF,CAAC,EAAEC,CAAC,EAAE;MAC7B,CAACD,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACD,CAAC,EAAEC,CAAC,CAAC,CAACE,GAAG,CAACd,CAAC,IAAIA,CAAC,CAACe,WAAW,CAAC,CAAC,CAAC;MACzC,IAAIJ,CAAC,GAAGC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,KAChB,IAAID,CAAC,GAAGC,CAAC,EAAE,OAAO,CAAC,CAAC,KACpB,OAAO,CAAC;IACf;IAEA,IAAII,aAAa,GAAGT,OAAO,CAACG,QAAQ,CAClC,CAACC,CAAC,EAAEC,CAAC,KAAKC,eAAe,CAACF,CAAC,CAACN,QAAQ,EAAEO,CAAC,CAACP,QAAQ,CAAC,CAAC;IAEpD,IAAIY,iBAAiB,GAAGb,WAAW,CAACM,QAAQ,CAC1C,CAACC,CAAC,EAAEC,CAAC,KAAKC,eAAe,CAACF,CAAC,CAACO,IAAI,EAAEN,CAAC,CAACM,IAAI,CAAC,CAAC;IAE5C,IAAIC,QAAQ,GAAG,CAAC,GAAGF,iBAAiB,EAAE,GAAGD,aAAa,EAAE,GAAGP,WAAW,CAAC;IACvE,OAAO,IAAInB,QAAQ,CAAC6B,QAAQ,CAAC;EAC/B;EAEAC,QAAQA,CAAA,EAAG;IACT,IAAIC,MAAM,GAAG,IAAI,CAACnB,cAAc,CAAC,CAAC;IAClC,IAAIoB,QAAQ,GAAG,IAAI,CAAC9B,IAAI,CAACsB,GAAG,CAAC,CAACS,IAAI,EAAEC,KAAK,KAAKD,IAAI,KAAKF,MAAM,CAACG,KAAK,CAAC,CAAC;IACrE,IAAIC,MAAM,GAAGH,QAAQ,CAACI,KAAK,CAAC1B,CAAC,IAAIA,CAAC,KAAK,IAAI,CAAC;IAC5C,OAAOyB,MAAM;EACf;EAEAxB,MAAMA,CAACsB,IAAI,EAAE;IACX,OAAO,IAAIjC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACE,IAAI,EAAE+B,IAAI,CAAC,CAAC;EAC3C;EAEAI,eAAeA,CAACC,MAAM,EAAEC,IAAI,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAAE,kBAAiBH,MAAO,YAAWC,IAAK,EAAC,CAAC;IACvD,SAASG,YAAYA,CAACC,KAAK,EAAEC,OAAO,EAAEX,IAAI,EAAE;MAC1C,IAAIY,WAAW,GAAGF,KAAK,CAACG,SAAS,CAACF,OAAO,CAAC;MAC1C,IAAIG,MAAM,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC,EAAEH,WAAW,CAAC;MACxC,IAAII,KAAK,GAAGN,KAAK,CAACK,KAAK,CAACH,WAAW,CAAC;MACpC,OAAO,CAAC,GAAGE,MAAM,EAAEd,IAAI,EAAE,GAAGgB,KAAK,CAAC;IACpC;IAEA,IAAIC,UAAU,GAAG,IAAI,CAAChD,IAAI,CAACiD,IAAI,CAACzC,CAAC,IAAIA,CAAC,CAAC0C,EAAE,KAAKd,MAAM,CAAC;IACrD,IAAIe,IAAI,GAAG,IAAI,CAACnD,IAAI,CAACoD,MAAM,CAAC5C,CAAC,IAAIA,CAAC,KAAKwC,UAAU,CAAC;IAElD,IAAIrB,QAAQ,GAAG,EAAE;IACjB,IAAIU,IAAI,KAAK,QAAQ,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCZ,QAAQ,GAAG,CAAC,GAAGwB,IAAI,EAAEH,UAAU,CAAC;IAClC,CAAC,MAAM;MACLV,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BZ,QAAQ,GAAGa,YAAY,CAACW,IAAI,EAAG3C,CAAC,IAAIA,CAAC,CAAC0C,EAAE,KAAKb,IAAI,EAAGW,UAAU,CAAC;IACjE;IACA,OAAO,IAAIlD,QAAQ,CAAC6B,QAAQ,CAAC;EAC/B;EAEA0B,UAAUA,CAACtB,IAAI,EAAE;IACf,IAAIuB,QAAQ,GAAG,IAAI,CAACtD,IAAI,CAACoD,MAAM,CAAC5C,CAAC,IAAIA,CAAC,KAAKuB,IAAI,CAAC;IAChD,OAAO,IAAIjC,QAAQ,CAACwD,QAAQ,CAAC;EAC/B;EAEAC,gBAAgBA,CAACxB,IAAI,EAAE;IACrB,IAAIyB,WAAW,GAAGzB,IAAI,CAAC0B,OAAO,CAAC,CAAC;IAChCnB,OAAO,CAACC,GAAG,CAAE,mBAAkBiB,WAAW,CAACE,UAAW,EAAC,CAAC;IAExD,IAAIC,KAAK,GAAG,IAAI,CAAC3D,IAAI;IACrB,IAAI4D,KAAK,GAAGD,KAAK,CAACE,OAAO,CAAC9B,IAAI,CAAC;IAC/B,IAAIc,MAAM,GAAGc,KAAK,CAACb,KAAK,CAAC,CAAC,EAAEc,KAAK,CAAC;IAClC,IAAIb,KAAK,GAAGY,KAAK,CAACb,KAAK,CAACc,KAAK,GAAG,CAAC,CAAC;IAClC,OAAO,IAAI9D,QAAQ,CAAC,CAAC,GAAG+C,MAAM,EAAEW,WAAW,EAAE,GAAGT,KAAK,CAAC,CAAC;EACzD;EAEAe,gBAAgBA,CAACC,MAAM,EAAE;IACvB,IAAIC,QAAQ,GAAG,IAAI,CAAChE,IAAI,CAACsB,GAAG,CAACd,CAAC,IAAI,IAAIX,QAAQ,CAAC;MAAC,GAAGW,CAAC;MAAEuD,MAAM,EAAEA;IAAM,CAAC,CAAC,CAAC;IACvE,OAAO,IAAIjE,QAAQ,CAACkE,QAAQ,CAAC;EAC/B;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI,CAACjE,IAAI,CAACkE,IAAI,CAAC1D,CAAC,IAAIA,CAAC,CAACuD,MAAM,KAAK,KAAK,CAAC;EAChD;EAEAI,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAACnE,IAAI,CAACkE,IAAI,CAAC1D,CAAC,IAAIA,CAAC,CAACuD,MAAM,KAAK,IAAI,CAAC;EAC/C;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}