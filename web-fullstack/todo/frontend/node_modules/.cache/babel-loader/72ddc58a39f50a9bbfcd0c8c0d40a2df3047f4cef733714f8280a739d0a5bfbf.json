{"ast":null,"code":"'use strict';\n\nvar LocaleHelpers = require('../var/LocaleHelpers'),\n  trim = require('../../common/internal/trim'),\n  getMonth = require('./getMonth'),\n  isDefined = require('../../common/internal/isDefined'),\n  getNewDate = require('./getNewDate'),\n  compareDay = require('./compareDay'),\n  getWeekday = require('./getWeekday'),\n  dateIsValid = require('./dateIsValid'),\n  classChecks = require('../../common/var/classChecks'),\n  compareDate = require('./compareDate');\nvar isString = classChecks.isString,\n  English = LocaleHelpers.English;\nfunction fullCompareDate(date, d, margin) {\n  var tmp;\n  if (!dateIsValid(date)) return;\n  if (isString(d)) {\n    d = trim(d).toLowerCase();\n    switch (true) {\n      case d === 'future':\n        return date.getTime() > getNewDate().getTime();\n      case d === 'past':\n        return date.getTime() < getNewDate().getTime();\n      case d === 'today':\n        return compareDay(date);\n      case d === 'tomorrow':\n        return compareDay(date, 1);\n      case d === 'yesterday':\n        return compareDay(date, -1);\n      case d === 'weekday':\n        return getWeekday(date) > 0 && getWeekday(date) < 6;\n      case d === 'weekend':\n        return getWeekday(date) === 0 || getWeekday(date) === 6;\n      case isDefined(tmp = English.weekdayMap[d]):\n        return getWeekday(date) === tmp;\n      case isDefined(tmp = English.monthMap[d]):\n        return getMonth(date) === tmp;\n    }\n  }\n  return compareDate(date, d, margin);\n}\nmodule.exports = fullCompareDate;","map":{"version":3,"names":["LocaleHelpers","require","trim","getMonth","isDefined","getNewDate","compareDay","getWeekday","dateIsValid","classChecks","compareDate","isString","English","fullCompareDate","date","d","margin","tmp","toLowerCase","getTime","weekdayMap","monthMap","module","exports"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/node_modules/sugar-date/date/internal/fullCompareDate.js"],"sourcesContent":["'use strict';\n\nvar LocaleHelpers = require('../var/LocaleHelpers'),\n    trim = require('../../common/internal/trim'),\n    getMonth = require('./getMonth'),\n    isDefined = require('../../common/internal/isDefined'),\n    getNewDate = require('./getNewDate'),\n    compareDay = require('./compareDay'),\n    getWeekday = require('./getWeekday'),\n    dateIsValid = require('./dateIsValid'),\n    classChecks = require('../../common/var/classChecks'),\n    compareDate = require('./compareDate');\n\nvar isString = classChecks.isString,\n    English = LocaleHelpers.English;\n\nfunction fullCompareDate(date, d, margin) {\n  var tmp;\n  if (!dateIsValid(date)) return;\n  if (isString(d)) {\n    d = trim(d).toLowerCase();\n    switch(true) {\n      case d === 'future':    return date.getTime() > getNewDate().getTime();\n      case d === 'past':      return date.getTime() < getNewDate().getTime();\n      case d === 'today':     return compareDay(date);\n      case d === 'tomorrow':  return compareDay(date,  1);\n      case d === 'yesterday': return compareDay(date, -1);\n      case d === 'weekday':   return getWeekday(date) > 0 && getWeekday(date) < 6;\n      case d === 'weekend':   return getWeekday(date) === 0 || getWeekday(date) === 6;\n\n      case (isDefined(tmp = English.weekdayMap[d])):\n        return getWeekday(date) === tmp;\n      case (isDefined(tmp = English.monthMap[d])):\n        return getMonth(date) === tmp;\n    }\n  }\n  return compareDate(date, d, margin);\n}\n\nmodule.exports = fullCompareDate;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,sBAAsB,CAAC;EAC/CC,IAAI,GAAGD,OAAO,CAAC,4BAA4B,CAAC;EAC5CE,QAAQ,GAAGF,OAAO,CAAC,YAAY,CAAC;EAChCG,SAAS,GAAGH,OAAO,CAAC,iCAAiC,CAAC;EACtDI,UAAU,GAAGJ,OAAO,CAAC,cAAc,CAAC;EACpCK,UAAU,GAAGL,OAAO,CAAC,cAAc,CAAC;EACpCM,UAAU,GAAGN,OAAO,CAAC,cAAc,CAAC;EACpCO,WAAW,GAAGP,OAAO,CAAC,eAAe,CAAC;EACtCQ,WAAW,GAAGR,OAAO,CAAC,8BAA8B,CAAC;EACrDS,WAAW,GAAGT,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAIU,QAAQ,GAAGF,WAAW,CAACE,QAAQ;EAC/BC,OAAO,GAAGZ,aAAa,CAACY,OAAO;AAEnC,SAASC,eAAeA,CAACC,IAAI,EAAEC,CAAC,EAAEC,MAAM,EAAE;EACxC,IAAIC,GAAG;EACP,IAAI,CAACT,WAAW,CAACM,IAAI,CAAC,EAAE;EACxB,IAAIH,QAAQ,CAACI,CAAC,CAAC,EAAE;IACfA,CAAC,GAAGb,IAAI,CAACa,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;IACzB,QAAO,IAAI;MACT,KAAKH,CAAC,KAAK,QAAQ;QAAK,OAAOD,IAAI,CAACK,OAAO,CAAC,CAAC,GAAGd,UAAU,CAAC,CAAC,CAACc,OAAO,CAAC,CAAC;MACtE,KAAKJ,CAAC,KAAK,MAAM;QAAO,OAAOD,IAAI,CAACK,OAAO,CAAC,CAAC,GAAGd,UAAU,CAAC,CAAC,CAACc,OAAO,CAAC,CAAC;MACtE,KAAKJ,CAAC,KAAK,OAAO;QAAM,OAAOT,UAAU,CAACQ,IAAI,CAAC;MAC/C,KAAKC,CAAC,KAAK,UAAU;QAAG,OAAOT,UAAU,CAACQ,IAAI,EAAG,CAAC,CAAC;MACnD,KAAKC,CAAC,KAAK,WAAW;QAAE,OAAOT,UAAU,CAACQ,IAAI,EAAE,CAAC,CAAC,CAAC;MACnD,KAAKC,CAAC,KAAK,SAAS;QAAI,OAAOR,UAAU,CAACO,IAAI,CAAC,GAAG,CAAC,IAAIP,UAAU,CAACO,IAAI,CAAC,GAAG,CAAC;MAC3E,KAAKC,CAAC,KAAK,SAAS;QAAI,OAAOR,UAAU,CAACO,IAAI,CAAC,KAAK,CAAC,IAAIP,UAAU,CAACO,IAAI,CAAC,KAAK,CAAC;MAE/E,KAAMV,SAAS,CAACa,GAAG,GAAGL,OAAO,CAACQ,UAAU,CAACL,CAAC,CAAC,CAAC;QAC1C,OAAOR,UAAU,CAACO,IAAI,CAAC,KAAKG,GAAG;MACjC,KAAMb,SAAS,CAACa,GAAG,GAAGL,OAAO,CAACS,QAAQ,CAACN,CAAC,CAAC,CAAC;QACxC,OAAOZ,QAAQ,CAACW,IAAI,CAAC,KAAKG,GAAG;IACjC;EACF;EACA,OAAOP,WAAW,CAACI,IAAI,EAAEC,CAAC,EAAEC,MAAM,CAAC;AACrC;AAEAM,MAAM,CAACC,OAAO,GAAGV,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}