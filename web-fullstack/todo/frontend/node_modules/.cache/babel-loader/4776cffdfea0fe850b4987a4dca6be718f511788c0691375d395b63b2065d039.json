{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js\",\n  _s = $RefreshSig$();\n// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// Type new item directly into list instead of form\n// Editing entries in-list\n// Use Date for deadline\n// Show completed items in separate list (move when completed)\n// Sort by deadline\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport ToDoItem from \"./components/ToDoItem\";\nimport Sugar from \"sugar-date\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction makeNewTaskForm(items, setItems) {\n  return function () {\n    function addNewTask(event) {\n      event.preventDefault();\n      let task = event.target.task.value;\n      if (task) {\n        try {\n          let newTask = new ToDoItem({\n            task: event.target.task.value,\n            deadline: event.target.deadline.value\n          });\n        } catch (e) {\n          console.error(e);\n        }\n        console.log(`Add new task '${newTask.task}'`);\n        setItems([...items, newTask]);\n      }\n      event.target.reset();\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newItem\",\n      onSubmit: addNewTask,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newTaskInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newTask\",\n          children: \"New task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"task\",\n          id: \"newTask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deadlineInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newDeadline\",\n          children: \"Deadline (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"deadline\",\n          id: \"newDeadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        action: \"submit\",\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  };\n}\nfunction dragListItem(event) {\n  event.dataTransfer.setData(\"text/uuid\", event.target.id);\n}\nfunction isDraggedOverSelf(event) {\n  return event.target.id === event.dataTransfer.getData(\"text/uuid\");\n}\nfunction isDraggedOverNext(event, items) {\n  let dragged = event.dataTransfer.getData(\"text/uuid\");\n  let current = event.target.id;\n  const getIndex = id => items.findIndex(i => i.id === id);\n  return getIndex(current) - getIndex(dragged) === 1;\n}\nfunction makeDragoverListItem(items) {\n  return function (event) {\n    event.preventDefault();\n    if (event.target.tagName === \"LI\" && !isDraggedOverSelf(event) && !isDraggedOverNext(event, items)) {\n      event.target.classList.add(\"gapAbove\");\n    }\n  };\n}\nfunction dragleaveListItem(event) {\n  event.preventDefault();\n  event.target.classList.remove(\"gapAbove\");\n}\nfunction moveWithinArray(items, fromID, toID) {\n  console.log(`Move from item ${fromID} to item ${toID}`);\n  function insertBefore(array, matchFn, item) {\n    let insertPoint = array.findIndex(matchFn);\n    let before = array.slice(0, insertPoint);\n    let after = array.slice(insertPoint);\n    return [...before, item, ...after];\n  }\n  let itemToMove = items.find(i => i.id === fromID);\n  let rest = items.filter(i => i !== itemToMove);\n  let newItems = [];\n  if (toID === \"bottom\") {\n    console.log(\"Move item to bottom\");\n    newItems = [...rest, itemToMove];\n  } else {\n    console.log(\"Insert item\");\n    newItems = insertBefore(rest, i => i.id === toID, itemToMove);\n  }\n  return newItems;\n}\nfunction makeDropListItem(items, setItems) {\n  return function (event) {\n    event.preventDefault();\n    if (items.length > 1) {\n      let fromID = event.dataTransfer.getData(\"text/uuid\");\n\n      // Check if item was dropped below the list items, in the extra space we\n      // leave at bottom of the ol.todo\n      let toID = event.target.className === \"todo\" ? \"bottom\" : event.target.id;\n      if (fromID !== toID && !isDraggedOverNext(event, items)) {\n        let newItems = moveWithinArray(items, fromID, toID);\n        setItems(newItems);\n      }\n    }\n  };\n}\nfunction makeListItems(items, setItems) {\n  function updateItemsWithToggledItem(items, item) {\n    return function () {\n      let toggledItem = ToDoItem.toggled(item);\n      console.log(`Marking item as ${toggledItem.doneStatus}`);\n      let split = items.indexOf(item);\n      let before = items.slice(0, split);\n      let after = items.slice(split + 1);\n      let newItems = [...before, toggledItem, ...after];\n      setItems(newItems);\n    };\n  }\n  function ListItem(item) {\n    if (item) {\n      let toggleDoneStatus = updateItemsWithToggledItem(items, item);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: item.id,\n        className: `${item.doneStatus} ${item.activeStatus}`,\n        onClick: toggleDoneStatus,\n        draggable: \"true\",\n        onDragStart: dragListItem,\n        onDragLeave: dragleaveListItem,\n        children: `${item}`\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  let dropListItem = makeDropListItem(items, setItems);\n  let dragoverListItem = makeDragoverListItem(items);\n  return function () {\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"todo\",\n      onDragOver: dragoverListItem,\n      onDrop: dropListItem,\n      children: items.map(ListItem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  };\n}\nfunction makeCheckAllButton(items, setItems) {\n  function setAllItemStatus(isDone) {\n    let newItems = items.map(item => new ToDoItem({\n      ...item,\n      isDone: isDone\n    }));\n    setItems(newItems);\n  }\n  const checkAll = () => setAllItemStatus(true);\n  const uncheckAll = () => setAllItemStatus(false);\n  let checkAllStatus = items.some(i => i.isDone === false);\n  let uncheckAllStatus = items.some(i => i.isDone === true);\n  function clearAll() {\n    setItems([]);\n  }\n  return function () {\n    if (items.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoControls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: checkAll,\n          className: ToDoItem.activeOrNot(!checkAllStatus),\n          children: \"Mark all as finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: uncheckAll,\n          className: ToDoItem.activeOrNot(!uncheckAllStatus),\n          children: \"Mark all as unfinished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: clearAll,\n          children: \"Clear all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this);\n    }\n  };\n}\nfunction ToDoList() {\n  _s();\n  let [items, setItems] = useState([]);\n  let ListItems = makeListItems(items, setItems);\n  let NewTaskForm = makeNewTaskForm(items, setItems);\n  let CheckAllButton = makeCheckAllButton(items, setItems);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Add a new task using the form below. Drag to rearrange tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItems, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckAllButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = ToDoList;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ToDoList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToDoList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","ToDoItem","Sugar","jsxDEV","_jsxDEV","makeNewTaskForm","items","setItems","addNewTask","event","preventDefault","task","target","value","newTask","deadline","e","console","error","log","reset","className","onSubmit","autoComplete","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","action","dragListItem","dataTransfer","setData","isDraggedOverSelf","getData","isDraggedOverNext","dragged","current","getIndex","findIndex","i","makeDragoverListItem","tagName","classList","add","dragleaveListItem","remove","moveWithinArray","fromID","toID","insertBefore","array","matchFn","item","insertPoint","before","slice","after","itemToMove","find","rest","filter","newItems","makeDropListItem","length","makeListItems","updateItemsWithToggledItem","toggledItem","toggled","doneStatus","split","indexOf","ListItem","toggleDoneStatus","activeStatus","onClick","draggable","onDragStart","onDragLeave","dropListItem","dragoverListItem","onDragOver","onDrop","map","makeCheckAllButton","setAllItemStatus","isDone","checkAll","uncheckAll","checkAllStatus","some","uncheckAllStatus","clearAll","activeOrNot","ToDoList","_s","ListItems","NewTaskForm","CheckAllButton","_c","App","_c2","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js"],"sourcesContent":["// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// Type new item directly into list instead of form\n// Editing entries in-list\n// Use Date for deadline\n// Show completed items in separate list (move when completed)\n// Sort by deadline\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport ToDoItem from \"./components/ToDoItem\";\n\nimport Sugar from \"sugar-date\";\n\nfunction makeNewTaskForm(items, setItems) {\n\n  return function() {\n    function addNewTask (event) {\n      event.preventDefault();\n\n      let task = event.target.task.value;\n\n      if (task) {\n        try {\n        let newTask = new ToDoItem({\n          task: event.target.task.value, \n          deadline: event.target.deadline.value\n        });\n        } catch(e) {\n          console.error(e);\n        }\n        console.log(`Add new task '${newTask.task}'`);\n\n        setItems([...items, newTask]);\n      }\n      event.target.reset();\n    }\n\n    return(\n      <form className=\"newItem\" onSubmit={addNewTask} autoComplete=\"off\">\n        <div className=\"newTaskInput\">\n          <label htmlFor=\"newTask\">New task:</label>\n          <input type=\"text\" name=\"task\" id=\"newTask\" />\n        </div>\n        <div className=\"deadlineInput\">\n          <label htmlFor=\"newDeadline\">Deadline (optional):</label>\n          <input type=\"text\" name=\"deadline\" id=\"newDeadline\" />\n        </div>\n        <button action=\"submit\">Add task</button>\n      </form>\n    );\n  }\n}\n\nfunction dragListItem(event) {\n  event.dataTransfer.setData(\"text/uuid\", event.target.id);\n}\n\nfunction isDraggedOverSelf(event) {\n  return event.target.id === event.dataTransfer.getData(\"text/uuid\");\n}\n\nfunction isDraggedOverNext(event, items) {\n  let dragged = event.dataTransfer.getData(\"text/uuid\");\n  let current = event.target.id;\n  const getIndex = id => items.findIndex(i => i.id === id);\n  return getIndex(current) - getIndex(dragged) === 1;\n}\n\nfunction makeDragoverListItem(items) {\n  return function(event) {\n    event.preventDefault();\n    if (event.target.tagName === \"LI\" \n      && !isDraggedOverSelf(event) \n      && !isDraggedOverNext(event, items)) {\n      event.target.classList.add(\"gapAbove\");\n    }\n  }\n}\n\nfunction dragleaveListItem(event) {\n  event.preventDefault();\n  event.target.classList.remove(\"gapAbove\");\n}\n\nfunction moveWithinArray(items, fromID, toID) {\n \n  console.log(`Move from item ${fromID} to item ${toID}`);\n  function insertBefore(array, matchFn, item) {\n    let insertPoint = array.findIndex(matchFn);\n    let before = array.slice(0, insertPoint);\n    let after = array.slice(insertPoint);\n    return [...before, item, ...after];\n  }\n\n  let itemToMove = items.find(i => i.id === fromID);\n  let rest = items.filter(i => i !== itemToMove);\n\n  let newItems = [];\n  if (toID === \"bottom\") {\n    console.log(\"Move item to bottom\");\n    newItems = [...rest, itemToMove];\n  } else {\n    console.log(\"Insert item\");\n    newItems = insertBefore(rest, (i => i.id === toID), itemToMove);\n  }\n  return newItems;\n}\n\nfunction makeDropListItem(items, setItems) {\n  return function(event) {\n    event.preventDefault()\n\n    if (items.length > 1) {\n      let fromID = event.dataTransfer.getData(\"text/uuid\");\n\n      // Check if item was dropped below the list items, in the extra space we\n      // leave at bottom of the ol.todo\n      let toID = (event.target.className === \"todo\") \n                  ? \"bottom\" : event.target.id;\n\n      if (fromID !== toID && !isDraggedOverNext(event, items)) {\n        let newItems = moveWithinArray(items, fromID, toID);\n        setItems(newItems);\n      }\n    }\n  }\n}\n\nfunction makeListItems(items, setItems) {\n\n  function updateItemsWithToggledItem(items, item) {\n    return function() {\n      let toggledItem = ToDoItem.toggled(item);\n      console.log(`Marking item as ${toggledItem.doneStatus}`);\n\n      let split = items.indexOf(item);\n      let before = items.slice(0, split);\n      let after = items.slice(split + 1);\n      let newItems = [...before, toggledItem, ...after]\n      setItems(newItems);\n    }\n  }\n\n  function ListItem(item) {\n    if (item) {\n      let toggleDoneStatus = updateItemsWithToggledItem(items, item);\n\n      return (\n        <li key={item.id}\n            id={item.id}\n            className={`${item.doneStatus} ${item.activeStatus}`}\n            onClick={toggleDoneStatus}\n            draggable=\"true\"\n            onDragStart={dragListItem}\n            onDragLeave={dragleaveListItem}>{`${item}`}</li>\n      );\n    }\n  }\n\n  let dropListItem = makeDropListItem(items, setItems);\n  let dragoverListItem = makeDragoverListItem(items);\n\n  return function() {\n    return(\n      <ol className=\"todo\"\n          onDragOver={dragoverListItem}\n          onDrop={dropListItem}>\n        {items.map(ListItem)}\n      </ol>\n    );\n  }\n}\n\nfunction makeCheckAllButton(items, setItems) {\n\n  function setAllItemStatus(isDone) {\n    let newItems = items.map(item => new ToDoItem({...item, isDone: isDone}));\n    setItems(newItems);\n  }\n\n  const checkAll = () => setAllItemStatus(true);\n  const uncheckAll = () => setAllItemStatus(false);\n \n  let checkAllStatus = items.some(i => i.isDone === false);\n  let uncheckAllStatus = items.some(i => i.isDone === true);\n\n  function clearAll() {\n    setItems([]);\n  }\n\n  return function() {\n    if (items.length > 0) {\n      return(\n        <div className=\"todoControls\">\n          <button type=\"button\" \n                  onClick={checkAll}\n                  className={ToDoItem.activeOrNot(!checkAllStatus)}\n          >Mark all as finished</button>\n          <button type=\"button\" \n                  onClick={uncheckAll}\n                  className={ToDoItem.activeOrNot(!uncheckAllStatus)}\n          >Mark all as unfinished</button>\n          <button type=\"button\" onClick={clearAll}>Clear all</button>\n        </div>\n      );\n    }\n  }\n}\n\nfunction ToDoList() {\n  let [items, setItems] = useState([]);\n  \n  let ListItems = makeListItems(items, setItems);\n  let NewTaskForm = makeNewTaskForm(items, setItems);\n  let CheckAllButton = makeCheckAllButton(items, setItems);\n\n  return(\n    <section id=\"todo\">\n      <div className=\"todoList\">\n        <h1>To Do</h1>\n        <p className=\"instructions\">Add a new task using the form below. Drag to rearrange tasks.</p>\n        <ListItems />\n        <CheckAllButton />\n      </div>\n      <NewTaskForm />\n    </section>\n  );\n}\n\nfunction App() {\n  return(<ToDoList />);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}