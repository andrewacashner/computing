{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js\",\n  _s = $RefreshSig$();\n// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Utilities from \"./classes/Utilities\";\nimport { ToDoItem, ToDoList } from \"./classes/ToDoItem\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction dragListItem(event) {\n  event.dataTransfer.setData(\"text/uuid\", event.target.id);\n}\nfunction isDraggedOverSelf(event) {\n  return event.target.id === event.dataTransfer.getData(\"text/uuid\");\n}\nfunction isDraggedOverNext(event, items) {\n  let dragged = event.dataTransfer.getData(\"text/uuid\");\n  let current = event.target.id;\n  const getIndex = id => items.findIndex(i => i.id === id);\n  return getIndex(current) - getIndex(dragged) === 1;\n}\nfunction makeDragoverListItem(items) {\n  return function (event) {\n    event.preventDefault();\n    if (event.target.tagName === \"LI\" && !isDraggedOverSelf(event) && !isDraggedOverNext(event, items)) {\n      event.target.classList.add(\"gapAbove\");\n    }\n  };\n}\nfunction dragleaveListItem(event) {\n  event.preventDefault();\n  event.target.classList.remove(\"gapAbove\");\n}\nfunction moveWithinArray(items, fromID, toID) {\n  console.log(`Move from item ${fromID} to item ${toID}`);\n  function insertBefore(array, matchFn, item) {\n    let insertPoint = array.findIndex(matchFn);\n    let before = array.slice(0, insertPoint);\n    let after = array.slice(insertPoint);\n    return [...before, item, ...after];\n  }\n  let itemToMove = items.find(i => i.id === fromID);\n  let rest = items.filter(i => i !== itemToMove);\n  let newItems = [];\n  if (toID === \"bottom\") {\n    console.log(\"Move item to bottom\");\n    newItems = [...rest, itemToMove];\n  } else {\n    console.log(\"Insert item\");\n    newItems = insertBefore(rest, i => i.id === toID, itemToMove);\n  }\n  return newItems;\n}\nfunction makeDropListItem(items, setItems) {\n  return function (event) {\n    event.preventDefault();\n    if (items.length > 1) {\n      let fromID = event.dataTransfer.getData(\"text/uuid\");\n\n      // Check if item was dropped below the list items, in the extra space we\n      // leave at bottom of the ol.todo\n      let toID = event.target.className === \"todo\" ? \"bottom\" : event.target.id;\n      if (fromID !== toID && !isDraggedOverNext(event, items)) {\n        let newItems = moveWithinArray(items, fromID, toID);\n        setItems(newItems);\n      }\n    }\n  };\n}\nfunction App() {\n  _s();\n  let [items, setItems] = useState(new ToDoList());\n  let updateItems = newItems => setItems(new ToDoList(...newItems));\n  let [formDefaults, setFormDefaults] = useState({\n    task: \"\",\n    deadline: \"\"\n  });\n  let ListItems = makeListItems(items, updateItems, setFormDefaults);\n  let NewTaskForm = makeNewTaskForm(items, updateItems, formDefaults, setFormDefaults);\n  let itemState = {\n    obj: items,\n    fn: updateItems\n  };\n  let formState = {\n    obj: formDefaults,\n    fn: setFormDefaults\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Add a new task using the form below. Drag to rearrange tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        itemState: itemState,\n        formState: formState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckAllButton, {\n        itemState: itemState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CZ41IQxZw0kxmsAWXeZ6VtovCnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Utilities","ToDoItem","ToDoList","TaskList","CheckAllButton","NewTaskForm","jsxDEV","_jsxDEV","dragListItem","event","dataTransfer","setData","target","id","isDraggedOverSelf","getData","isDraggedOverNext","items","dragged","current","getIndex","findIndex","i","makeDragoverListItem","preventDefault","tagName","classList","add","dragleaveListItem","remove","moveWithinArray","fromID","toID","console","log","insertBefore","array","matchFn","item","insertPoint","before","slice","after","itemToMove","find","rest","filter","newItems","makeDropListItem","setItems","length","className","App","_s","updateItems","formDefaults","setFormDefaults","task","deadline","ListItems","makeListItems","makeNewTaskForm","itemState","obj","fn","formState","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js"],"sourcesContent":["// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Utilities from \"./classes/Utilities\";\nimport { ToDoItem, ToDoList } from \"./classes/ToDoItem\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\n\n\nfunction dragListItem(event) {\n  event.dataTransfer.setData(\"text/uuid\", event.target.id);\n}\n\nfunction isDraggedOverSelf(event) {\n  return event.target.id === event.dataTransfer.getData(\"text/uuid\");\n}\n\nfunction isDraggedOverNext(event, items) {\n  let dragged = event.dataTransfer.getData(\"text/uuid\");\n  let current = event.target.id;\n  const getIndex = id => items.findIndex(i => i.id === id);\n  return getIndex(current) - getIndex(dragged) === 1;\n}\n\nfunction makeDragoverListItem(items) {\n  return function(event) {\n    event.preventDefault();\n    if (event.target.tagName === \"LI\" \n      && !isDraggedOverSelf(event) \n      && !isDraggedOverNext(event, items)) {\n      event.target.classList.add(\"gapAbove\");\n    }\n  }\n}\n\nfunction dragleaveListItem(event) {\n  event.preventDefault();\n  event.target.classList.remove(\"gapAbove\");\n}\n\nfunction moveWithinArray(items, fromID, toID) {\n \n  console.log(`Move from item ${fromID} to item ${toID}`);\n  function insertBefore(array, matchFn, item) {\n    let insertPoint = array.findIndex(matchFn);\n    let before = array.slice(0, insertPoint);\n    let after = array.slice(insertPoint);\n    return [...before, item, ...after];\n  }\n\n  let itemToMove = items.find(i => i.id === fromID);\n  let rest = items.filter(i => i !== itemToMove);\n\n  let newItems = [];\n  if (toID === \"bottom\") {\n    console.log(\"Move item to bottom\");\n    newItems = [...rest, itemToMove];\n  } else {\n    console.log(\"Insert item\");\n    newItems = insertBefore(rest, (i => i.id === toID), itemToMove);\n  }\n  return newItems;\n}\n\nfunction makeDropListItem(items, setItems) {\n  return function(event) {\n    event.preventDefault()\n\n    if (items.length > 1) {\n      let fromID = event.dataTransfer.getData(\"text/uuid\");\n\n      // Check if item was dropped below the list items, in the extra space we\n      // leave at bottom of the ol.todo\n      let toID = (event.target.className === \"todo\") \n                  ? \"bottom\" : event.target.id;\n\n      if (fromID !== toID && !isDraggedOverNext(event, items)) {\n        let newItems = moveWithinArray(items, fromID, toID);\n        setItems(newItems);\n      }\n    }\n  }\n}\n\n\nfunction App() {\n  let [items, setItems] = useState(new ToDoList());\n  let updateItems = (newItems) => setItems(new ToDoList(...newItems));\n\n  let [formDefaults, setFormDefaults] = useState({ task: \"\", deadline: \"\" });\n\n  let ListItems = makeListItems(items, updateItems, setFormDefaults);\n  let NewTaskForm = makeNewTaskForm(items, updateItems, formDefaults, setFormDefaults);\n\n  let itemState = {obj: items, fn: updateItems};\n  let formState = {obj: formDefaults, fn: setFormDefaults};\n\n  return(\n    <section id=\"todo\">\n      <div className=\"todoList\">\n        <h1>To Do</h1>\n        <p className=\"instructions\">Add a new task using the form below. Drag to rearrange tasks.</p>\n        <TaskList itemState={itemState} formState={formState} />\n        <CheckAllButton itemState={itemState} />\n      </div>\n      <NewTaskForm />\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}