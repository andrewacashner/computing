{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js\",\n  _s = $RefreshSig$();\n// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// (done) Break up into separate class and component files\n// (done) Use props consistently for components to pass state\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { ToDoItem } from \"./classes/ToDoItem\";\nimport ToDoContext from \"./store/ToDoContext\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [items, setItems] = useState([]);\n  const emptyTask = new ToDoItem(\"racon\");\n  let [formValues, setFormValues] = useState(emptyTask);\n  function setForm(task, deadline = \"racon\") {\n    setFormValues(new ToDoItem(task, deadline));\n  }\n  let toDoContextValue = {\n    items: {\n      get: items,\n      set: setItems\n    },\n    form: {\n      get: formValues,\n      set: (task, deadline) => setForm(task, deadline),\n      reset: () => setFormValues(emptyTask)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ToDoContext.Provider, {\n    value: toDoContextValue,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instructions\",\n          children: \"Add a new task using the form below. Drag to rearrange tasks.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckAllButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MeIg56FWQCF5skx/rJCZMznfXys=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ToDoItem","ToDoContext","TaskList","CheckAllButton","NewTaskForm","jsxDEV","_jsxDEV","App","_s","items","setItems","emptyTask","formValues","setFormValues","setForm","task","deadline","toDoContextValue","get","set","form","reset","Provider","value","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js"],"sourcesContent":["// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// (done) Break up into separate class and component files\n// (done) Use props consistently for components to pass state\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { ToDoItem } from \"./classes/ToDoItem\";\nimport ToDoContext from \"./store/ToDoContext\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\n\nfunction App() {\n  let [items, setItems] = useState([]);\n  const emptyTask = new ToDoItem(\"racon\");\n  let [formValues, setFormValues] = useState(emptyTask);\n  \n  function setForm(task, deadline = \"racon\") {\n    setFormValues(new ToDoItem(task, deadline));\n  }\n\n  let toDoContextValue = {\n    items: {\n      get: items,\n      set: setItems\n    },\n    form: {\n      get: formValues,\n      set: (task, deadline) => setForm(task, deadline),\n      reset: () => setFormValues(emptyTask)\n    }\n  }\n\n  return(\n    <ToDoContext.Provider value={toDoContextValue}>\n      <section id=\"todo\">\n        <div className=\"todoList\">\n          <h1>To Do</h1>\n          <p className=\"instructions\">Add a new task using the form below. Drag to rearrange tasks.</p>\n          <TaskList />\n          <CheckAllButton />\n        </div>\n          <NewTaskForm />\n      </section>\n    </ToDoContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMY,SAAS,GAAG,IAAIX,QAAQ,CAAC,OAAO,CAAC;EACvC,IAAI,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACY,SAAS,CAAC;EAErD,SAASG,OAAOA,CAACC,IAAI,EAAEC,QAAQ,GAAG,OAAO,EAAE;IACzCH,aAAa,CAAC,IAAIb,QAAQ,CAACe,IAAI,EAAEC,QAAQ,CAAC,CAAC;EAC7C;EAEA,IAAIC,gBAAgB,GAAG;IACrBR,KAAK,EAAE;MACLS,GAAG,EAAET,KAAK;MACVU,GAAG,EAAET;IACP,CAAC;IACDU,IAAI,EAAE;MACJF,GAAG,EAAEN,UAAU;MACfO,GAAG,EAAEA,CAACJ,IAAI,EAAEC,QAAQ,KAAKF,OAAO,CAACC,IAAI,EAAEC,QAAQ,CAAC;MAChDK,KAAK,EAAEA,CAAA,KAAMR,aAAa,CAACF,SAAS;IACtC;EACF,CAAC;EAED,oBACEL,OAAA,CAACL,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAEN,gBAAiB;IAAAO,QAAA,eAC5ClB,OAAA;MAASmB,EAAE,EAAC,MAAM;MAAAD,QAAA,gBAChBlB,OAAA;QAAKoB,SAAS,EAAC,UAAU;QAAAF,QAAA,gBACvBlB,OAAA;UAAAkB,QAAA,EAAI;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdxB,OAAA;UAAGoB,SAAS,EAAC,cAAc;UAAAF,QAAA,EAAC;QAA6D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7FxB,OAAA,CAACJ,QAAQ;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACZxB,OAAA,CAACH,cAAc;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACJxB,OAAA,CAACF,WAAW;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE3B;AAACtB,EAAA,CAlCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}