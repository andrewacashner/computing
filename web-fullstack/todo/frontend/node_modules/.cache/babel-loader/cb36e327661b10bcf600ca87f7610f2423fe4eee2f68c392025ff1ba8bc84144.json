{"ast":null,"code":"import Sugar from\"sugar-date\";import Utilities from\"./Utilities\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class ToDoItem{constructor(_ref){let{task,deadline=null,isDone=false}=_ref;this.task=task;this.deadline=deadline;this.deadlineDate=ToDoItem.dateFromString(deadline);this.isDone=isDone;this.id=crypto.randomUUID();}static dateFromString(deadline){let test,date;if(deadline){test=Sugar.Date.create(deadline);date=new Sugar.Date(test).isValid().valueOf()?test:null;}else{date=null;}return date;}get deadlineString(){if(this.deadlineDate){return\"(\".concat(Sugar.Date.format(this.deadlineDate,\"%c\"),\")\");}else if(this.deadline){return\"(\".concat(this.deadline,\")\");}else{return\"\";}}static doneOrNot(isDone){return isDone?\"done\":\"notDone\";}static activeOrNot(isDone){return isDone?\"inactive\":\"active\";}get doneStatus(){return ToDoItem.doneOrNot(this.isDone);}get activeStatus(){return ToDoItem.activeOrNot(this.isDone);}static toggled(item){return new ToDoItem({...item,isDone:!item.isDone});}Span(){return function(){let deadlineClassList=\"todoDeadline\";let test=new Sugar.Date(this.deadlineDate);if(this.deadlineDate&&test.isPast().valueOf()){deadlineClassList+=\" pastDue\";}return/*#__PURE__*/_jsxs(\"span\",{className:\"todoItem\",children:[this.task,/*#__PURE__*/_jsx(\"span\",{className:deadlineClassList,children:this.deadlineString})]});}.bind(this);}}class ToDoList extends Array{toSortedByDate(){let[deadlines,noDeadlines]=Utilities.partition(this,i=>i.deadline!==null);let[dates,noDates]=Utilities.partition(deadlines,i=>i.deadlineDate!==null);let datesSorted=dates.toSorted((a,b)=>a.deadlineDate-b.deadlineDate);function stringCompareFn(a,b){[a,b]=[a,b].map(i=>i.toLowerCase());if(a<b)return-1;else if(a>b)return 1;else return 0;}let noDatesSorted=noDates.sort((a,b)=>stringCompareFn(a.deadline,b.deadline));let noDeadlinesSorted=noDeadlines.sort((a,b)=>stringCompareFn(a.task,b.task));return[...noDeadlinesSorted,...noDatesSorted,...datesSorted];}isSorted(){// TODO doesn't work\n//    let sorted = this.toSortedByDate();\n//    let compared = this.forEach((item, index) => item === sorted[index]);\n//    let tested = compared.every(i => i === true);\n//    return tested;\nreturn true;}}export{ToDoItem,ToDoList};","map":{"version":3,"names":["Sugar","Utilities","jsx","_jsx","jsxs","_jsxs","ToDoItem","constructor","_ref","task","deadline","isDone","deadlineDate","dateFromString","id","crypto","randomUUID","test","date","Date","create","isValid","valueOf","deadlineString","concat","format","doneOrNot","activeOrNot","doneStatus","activeStatus","toggled","item","Span","deadlineClassList","isPast","className","children","bind","ToDoList","Array","toSortedByDate","deadlines","noDeadlines","partition","i","dates","noDates","datesSorted","toSorted","a","b","stringCompareFn","map","toLowerCase","noDatesSorted","sort","noDeadlinesSorted","isSorted"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/components/ToDoItem.js"],"sourcesContent":["import Sugar from \"sugar-date\";\nimport Utilities from \"./Utilities\";\n\nclass ToDoItem {\n  task;\n  deadline;\n  deadlineDate;\n  isDone;\n  id;\n\n  constructor({task, deadline = null, isDone = false}) {\n    this.task = task;\n    this.deadline = deadline;\n    this.deadlineDate = ToDoItem.dateFromString(deadline);\n    this.isDone = isDone;\n    this.id = crypto.randomUUID();\n  }\n  \n  static dateFromString(deadline) {\n    let test, date;\n    if (deadline) {\n      test = Sugar.Date.create(deadline);\n      date = (new Sugar.Date(test).isValid().valueOf()) ? test : null;\n    } else {\n      date = null;\n    }\n    return date;\n  }\n\n  get deadlineString() {\n    if (this.deadlineDate) {\n      return `(${Sugar.Date.format(this.deadlineDate, \"%c\")})`;\n    } else if (this.deadline) {\n      return `(${this.deadline})`;\n    } else {\n      return \"\";\n    }\n  }\n\n  static doneOrNot(isDone) {\n    return (isDone) ? \"done\" : \"notDone\";\n  }\n\n  static activeOrNot(isDone) {\n    return (isDone) ? \"inactive\" : \"active\";\n  }\n\n  get doneStatus() {\n    return ToDoItem.doneOrNot(this.isDone);\n  }\n\n  get activeStatus() {\n    return ToDoItem.activeOrNot(this.isDone);\n  }\n\n  static toggled(item) {\n    return new ToDoItem({...item, isDone: !item.isDone});\n  }\n\n  Span() {\n    return function() {\n      let deadlineClassList = \"todoDeadline\";\n\n      let test = new Sugar.Date(this.deadlineDate);\n      if (this.deadlineDate && test.isPast().valueOf()) {\n        deadlineClassList += \" pastDue\";\n      }\n\n      return(\n        <span className=\"todoItem\">\n          {this.task}\n          <span className={deadlineClassList}>{this.deadlineString}</span>\n        </span>\n      );\n    }.bind(this);\n  }\n}\n\nclass ToDoList extends Array {\n  toSortedByDate() {\n    let [deadlines, noDeadlines] = Utilities.partition(this,\n      (i => i.deadline !== null));\n\n    let [dates, noDates] = Utilities.partition(deadlines,\n      (i => i.deadlineDate !== null));\n\n    let datesSorted = dates.toSorted(\n      (a, b) => a.deadlineDate - b.deadlineDate);\n\n    function stringCompareFn(a, b) {\n      [a, b] = [a, b].map(i => i.toLowerCase());\n      if (a < b) return -1;\n      else if (a > b) return 1;\n      else return 0;\n    }\n\n    let noDatesSorted = noDates.sort(\n      (a, b) => stringCompareFn(a.deadline, b.deadline));\n\n    let noDeadlinesSorted = noDeadlines.sort(\n      (a, b) => stringCompareFn(a.task, b.task));\n\n    return [...noDeadlinesSorted, ...noDatesSorted, ...datesSorted];\n  }\n\n  isSorted() {\n    // TODO doesn't work\n//    let sorted = this.toSortedByDate();\n//    let compared = this.forEach((item, index) => item === sorted[index]);\n//    let tested = compared.every(i => i === true);\n//    return tested;\n    return true;\n  }\n}\n\nexport { ToDoItem, ToDoList };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}