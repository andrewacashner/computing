{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js\",\n  _s = $RefreshSig$();\n// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// (done) Break up into separate class and component files\n// (done) Use props consistently for components to pass state\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { ToDoList } from \"./classes/ToDoItem\";\nimport ToDoContext from \"./store/ToDoContext\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [items, setItems] = useState(new ToDoList());\n  const emptyTask = {\n    task: \"\",\n    deadline: \"\"\n  };\n  let [defaults, setDefaults] = useState(emptyTask);\n  let todoContextValue = {\n    item: {\n      items: items,\n      setItems: setItems\n    },\n    form: {\n      defaults: defaults,\n      updateDefaults: setDefaults,\n      resetDefaults: () => setDefaults(emptyTask)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ItemContext.Provider, {\n    value: itemContextValue,\n    children: /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n      value: formContextValue,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoList\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"instructions\",\n            children: \"Add a new task using the form below. Drag to rearrange tasks.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckAllButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D8FSqMsuOAiTPNXBT8C4vezKrZc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ToDoList","ToDoContext","TaskList","CheckAllButton","NewTaskForm","jsxDEV","_jsxDEV","App","_s","items","setItems","emptyTask","task","deadline","defaults","setDefaults","todoContextValue","item","form","updateDefaults","resetDefaults","ItemContext","Provider","value","itemContextValue","children","FormContext","formContextValue","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js"],"sourcesContent":["// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// (done) Add edit button for each item\n// (done) Break up into separate class and component files\n// (done) Use props consistently for components to pass state\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { ToDoList } from \"./classes/ToDoItem\";\nimport ToDoContext from \"./store/ToDoContext\";\nimport TaskList from \"./components/TaskList\";\nimport CheckAllButton from \"./components/CheckAllButton\";\nimport NewTaskForm from \"./components/NewTaskForm\";\n\nfunction App() {\n  let [items, setItems] = useState(new ToDoList());\n  \n  const emptyTask = {task: \"\", deadline: \"\"};\n  let [defaults, setDefaults] = useState(emptyTask);\n\n  let todoContextValue = {\n    item: {\n      items: items,\n      setItems: setItems\n    },\n    form: {\n      defaults: defaults,\n      updateDefaults: setDefaults,\n      resetDefaults: () => setDefaults(emptyTask)\n    }\n  }\n\n  return(\n    <ItemContext.Provider value={itemContextValue}>\n      <FormContext.Provider value={formContextValue}>\n        <section id=\"todo\">\n          <div className=\"todoList\">\n            <h1>To Do</h1>\n            <p className=\"instructions\">Add a new task using the form below. Drag to rearrange tasks.</p>\n            <TaskList />\n            <CheckAllButton />\n          </div>\n            <NewTaskForm />\n        </section>\n      </FormContext.Provider>\n    </ItemContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAIC,QAAQ,CAAC,CAAC,CAAC;EAEhD,MAAMW,SAAS,GAAG;IAACC,IAAI,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC;EAC1C,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAACY,SAAS,CAAC;EAEjD,IAAIK,gBAAgB,GAAG;IACrBC,IAAI,EAAE;MACJR,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC;IACDQ,IAAI,EAAE;MACJJ,QAAQ,EAAEA,QAAQ;MAClBK,cAAc,EAAEJ,WAAW;MAC3BK,aAAa,EAAEA,CAAA,KAAML,WAAW,CAACJ,SAAS;IAC5C;EACF,CAAC;EAED,oBACEL,OAAA,CAACe,WAAW,CAACC,QAAQ;IAACC,KAAK,EAAEC,gBAAiB;IAAAC,QAAA,eAC5CnB,OAAA,CAACoB,WAAW,CAACJ,QAAQ;MAACC,KAAK,EAAEI,gBAAiB;MAAAF,QAAA,eAC5CnB,OAAA;QAASsB,EAAE,EAAC,MAAM;QAAAH,QAAA,gBAChBnB,OAAA;UAAKuB,SAAS,EAAC,UAAU;UAAAJ,QAAA,gBACvBnB,OAAA;YAAAmB,QAAA,EAAI;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd3B,OAAA;YAAGuB,SAAS,EAAC,cAAc;YAAAJ,QAAA,EAAC;UAA6D;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC7F3B,OAAA,CAACJ,QAAQ;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACZ3B,OAAA,CAACH,cAAc;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACJ3B,OAAA,CAACF,WAAW;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAE3B;AAACzB,EAAA,CAjCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}