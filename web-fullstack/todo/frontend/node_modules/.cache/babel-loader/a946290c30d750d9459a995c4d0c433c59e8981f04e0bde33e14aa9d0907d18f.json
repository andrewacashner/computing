{"ast":null,"code":"'use strict';\n\nvar classChecks = require('../../common/var/classChecks'),\n  simpleClone = require('../../common/internal/simpleClone'),\n  isObjectType = require('../../common/internal/isObjectType'),\n  getDateParamsFromString = require('./getDateParamsFromString'),\n  collectDateParamsFromArguments = require('./collectDateParamsFromArguments');\nvar isNumber = classChecks.isNumber,\n  isString = classChecks.isString;\nfunction collectUpdateDateArguments(args, allowDuration) {\n  var arg1 = args[0],\n    arg2 = args[1],\n    params,\n    reset;\n  if (allowDuration && isString(arg1)) {\n    params = getDateParamsFromString(arg1);\n    reset = arg2;\n  } else if (isNumber(arg1) && isNumber(arg2)) {\n    params = collectDateParamsFromArguments(args);\n  } else {\n    params = isObjectType(arg1) ? simpleClone(arg1) : arg1;\n    reset = arg2;\n  }\n  return [params, reset];\n}\nmodule.exports = collectUpdateDateArguments;","map":{"version":3,"names":["classChecks","require","simpleClone","isObjectType","getDateParamsFromString","collectDateParamsFromArguments","isNumber","isString","collectUpdateDateArguments","args","allowDuration","arg1","arg2","params","reset","module","exports"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/node_modules/sugar-date/date/internal/collectUpdateDateArguments.js"],"sourcesContent":["'use strict';\n\nvar classChecks = require('../../common/var/classChecks'),\n    simpleClone = require('../../common/internal/simpleClone'),\n    isObjectType = require('../../common/internal/isObjectType'),\n    getDateParamsFromString = require('./getDateParamsFromString'),\n    collectDateParamsFromArguments = require('./collectDateParamsFromArguments');\n\nvar isNumber = classChecks.isNumber,\n    isString = classChecks.isString;\n\nfunction collectUpdateDateArguments(args, allowDuration) {\n  var arg1 = args[0], arg2 = args[1], params, reset;\n  if (allowDuration && isString(arg1)) {\n    params = getDateParamsFromString(arg1);\n    reset  = arg2;\n  } else if (isNumber(arg1) && isNumber(arg2)) {\n    params = collectDateParamsFromArguments(args);\n  } else {\n    params = isObjectType(arg1) ? simpleClone(arg1) : arg1;\n    reset  = arg2;\n  }\n  return [params, reset];\n}\n\nmodule.exports = collectUpdateDateArguments;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,8BAA8B,CAAC;EACrDC,WAAW,GAAGD,OAAO,CAAC,mCAAmC,CAAC;EAC1DE,YAAY,GAAGF,OAAO,CAAC,oCAAoC,CAAC;EAC5DG,uBAAuB,GAAGH,OAAO,CAAC,2BAA2B,CAAC;EAC9DI,8BAA8B,GAAGJ,OAAO,CAAC,kCAAkC,CAAC;AAEhF,IAAIK,QAAQ,GAAGN,WAAW,CAACM,QAAQ;EAC/BC,QAAQ,GAAGP,WAAW,CAACO,QAAQ;AAEnC,SAASC,0BAA0BA,CAACC,IAAI,EAAEC,aAAa,EAAE;EACvD,IAAIC,IAAI,GAAGF,IAAI,CAAC,CAAC,CAAC;IAAEG,IAAI,GAAGH,IAAI,CAAC,CAAC,CAAC;IAAEI,MAAM;IAAEC,KAAK;EACjD,IAAIJ,aAAa,IAAIH,QAAQ,CAACI,IAAI,CAAC,EAAE;IACnCE,MAAM,GAAGT,uBAAuB,CAACO,IAAI,CAAC;IACtCG,KAAK,GAAIF,IAAI;EACf,CAAC,MAAM,IAAIN,QAAQ,CAACK,IAAI,CAAC,IAAIL,QAAQ,CAACM,IAAI,CAAC,EAAE;IAC3CC,MAAM,GAAGR,8BAA8B,CAACI,IAAI,CAAC;EAC/C,CAAC,MAAM;IACLI,MAAM,GAAGV,YAAY,CAACQ,IAAI,CAAC,GAAGT,WAAW,CAACS,IAAI,CAAC,GAAGA,IAAI;IACtDG,KAAK,GAAIF,IAAI;EACf;EACA,OAAO,CAACC,MAAM,EAAEC,KAAK,CAAC;AACxB;AAEAC,MAAM,CAACC,OAAO,GAAGR,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}