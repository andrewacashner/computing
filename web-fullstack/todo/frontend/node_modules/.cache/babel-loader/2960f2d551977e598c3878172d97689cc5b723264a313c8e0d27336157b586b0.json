{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/classes/ToDoItem.js\";\nimport Sugar from \"sugar-date\";\nimport Utilities from \"./Utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ToDoItem {\n  constructor({\n    task,\n    deadline = null,\n    isDone = false\n  }) {\n    this.task = task;\n    this.deadline = deadline;\n    this.deadlineDate = ToDoItem.dateFromString(deadline);\n    this.isDone = isDone;\n    this.id = crypto.randomUUID();\n  }\n  static dateFromString(deadline) {\n    let test, date;\n    if (deadline) {\n      test = Sugar.Date.create(deadline);\n      date = new Sugar.Date(test).isValid().valueOf() ? test : null;\n    } else {\n      date = null;\n    }\n    return date;\n  }\n  get deadlineString() {\n    if (this.deadlineDate) {\n      return `(${Sugar.Date.format(this.deadlineDate, \"%c\")})`;\n    } else if (this.deadline) {\n      return `(${this.deadline})`;\n    } else {\n      return \"\";\n    }\n  }\n  static doneOrNot(isDone) {\n    return isDone ? \"done\" : \"notDone\";\n  }\n  static activeOrNot(isDone) {\n    return isDone ? \"inactive\" : \"active\";\n  }\n  get doneStatus() {\n    return ToDoItem.doneOrNot(this.isDone);\n  }\n  get activeStatus() {\n    return ToDoItem.activeOrNot(this.isDone);\n  }\n  static toggled(item) {\n    return new ToDoItem({\n      ...item,\n      isDone: !item.isDone\n    });\n  }\n  Span() {\n    return function () {\n      let deadlineClassList = \"todoDeadline\";\n      let test = new Sugar.Date(this.deadlineDate);\n      if (this.deadlineDate && test.isPast().valueOf()) {\n        deadlineClassList += \" pastDue\";\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todoItem\",\n        children: [this.task, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: deadlineClassList,\n          children: this.deadlineString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    }.bind(this);\n  }\n}\nclass ToDoList extends Array {\n  static toSortedByDate(items) {\n    let [deadlines, noDeadlines] = Utilities.partition([...items], i => i.deadline !== null);\n    let [dates, noDates] = Utilities.partition([...deadlines], i => i.deadlineDate !== null);\n    let datesSorted = dates.toSorted((a, b) => a.deadlineDate - b.deadlineDate);\n    function stringCompareFn(a, b) {\n      [a, b] = [a, b].map(i => i.toLowerCase());\n      if (a < b) return -1;else if (a > b) return 1;else return 0;\n    }\n    let noDatesSorted = noDates.toSorted((a, b) => stringCompareFn(a.deadline, b.deadline));\n    let noDeadlinesSorted = noDeadlines.toSorted((a, b) => stringCompareFn(a.task, b.task));\n    return new ToDoList(...noDeadlinesSorted, ...noDatesSorted, ...datesSorted);\n  }\n  static isSorted(items) {\n    let sorted = ToDoList.toSortedByDate(items);\n    let compared = items.map((item, index) => item === sorted[index]);\n    let tested = compared.every(i => i === true);\n    return tested;\n  }\n  static append(items, item) {\n    return [...items, item];\n  }\n  static moveWithinArray(items, fromID, toID) {\n    console.log(`Move from item ${fromID} to item ${toID}`);\n    function insertBefore(array, matchFn, item) {\n      let insertPoint = array.findIndex(matchFn);\n      let before = array.slice(0, insertPoint);\n      let after = array.slice(insertPoint);\n      return [...before, item, ...after];\n    }\n    let itemToMove = items.find(i => i.id === fromID);\n    let rest = items.filter(i => i !== itemToMove);\n    let newItems = [];\n    if (toID === \"bottom\") {\n      console.log(\"Move item to bottom\");\n      newItems = [...rest, itemToMove];\n    } else {\n      console.log(\"Insert item\");\n      newItems = insertBefore(rest, i => i.id === toID, itemToMove);\n    }\n    return newItems;\n  }\n  static toggleDoneStatus(items, item) {\n    let toggledItem = ToDoItem.toggled(item);\n    console.log(`Marking item as ${toggledItem.doneStatus}`);\n    let split = items.indexOf(item);\n    let before = items.slice(0, split);\n    let after = items.slice(split + 1);\n    return [...before, toggledItem, ...after];\n  }\n  static removeItem(items, item) {\n    return items.filter(i => i !== item);\n  }\n  static setAllItemStatus(items, isDone) {\n    return items.map(i => new ToDoItem({\n      ...i,\n      isDone: isDone\n    }));\n  }\n  static areAnyLeftToDo(items) {\n    return items.some(i => i.isDone === false);\n  }\n  static areAnyDone(items) {\n    return items.some(i => i.isDone === true);\n  }\n}\nexport { ToDoItem, ToDoList };","map":{"version":3,"names":["Sugar","Utilities","jsxDEV","_jsxDEV","ToDoItem","constructor","task","deadline","isDone","deadlineDate","dateFromString","id","crypto","randomUUID","test","date","Date","create","isValid","valueOf","deadlineString","format","doneOrNot","activeOrNot","doneStatus","activeStatus","toggled","item","Span","deadlineClassList","isPast","className","children","fileName","_jsxFileName","lineNumber","columnNumber","bind","ToDoList","Array","toSortedByDate","items","deadlines","noDeadlines","partition","i","dates","noDates","datesSorted","toSorted","a","b","stringCompareFn","map","toLowerCase","noDatesSorted","noDeadlinesSorted","isSorted","sorted","compared","index","tested","every","append","moveWithinArray","fromID","toID","console","log","insertBefore","array","matchFn","insertPoint","findIndex","before","slice","after","itemToMove","find","rest","filter","newItems","toggleDoneStatus","toggledItem","split","indexOf","removeItem","setAllItemStatus","areAnyLeftToDo","some","areAnyDone"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/classes/ToDoItem.js"],"sourcesContent":["import Sugar from \"sugar-date\";\nimport Utilities from \"./Utilities\";\n\nclass ToDoItem {\n  task;\n  deadline;\n  deadlineDate;\n  isDone;\n  id;\n\n  constructor({task, deadline = null, isDone = false}) {\n    this.task = task;\n    this.deadline = deadline;\n    this.deadlineDate = ToDoItem.dateFromString(deadline);\n    this.isDone = isDone;\n    this.id = crypto.randomUUID();\n  }\n  \n  static dateFromString(deadline) {\n    let test, date;\n    if (deadline) {\n      test = Sugar.Date.create(deadline);\n      date = (new Sugar.Date(test).isValid().valueOf()) ? test : null;\n    } else {\n      date = null;\n    }\n    return date;\n  }\n\n  get deadlineString() {\n    if (this.deadlineDate) {\n      return `(${Sugar.Date.format(this.deadlineDate, \"%c\")})`;\n    } else if (this.deadline) {\n      return `(${this.deadline})`;\n    } else {\n      return \"\";\n    }\n  }\n\n  static doneOrNot(isDone) {\n    return (isDone) ? \"done\" : \"notDone\";\n  }\n\n  static activeOrNot(isDone) {\n    return (isDone) ? \"inactive\" : \"active\";\n  }\n\n  get doneStatus() {\n    return ToDoItem.doneOrNot(this.isDone);\n  }\n\n  get activeStatus() {\n    return ToDoItem.activeOrNot(this.isDone);\n  }\n\n  static toggled(item) {\n    return new ToDoItem({...item, isDone: !item.isDone});\n  }\n\n  Span() {\n    return function() {\n      let deadlineClassList = \"todoDeadline\";\n\n      let test = new Sugar.Date(this.deadlineDate);\n      if (this.deadlineDate && test.isPast().valueOf()) {\n        deadlineClassList += \" pastDue\";\n      }\n\n      return(\n        <span className=\"todoItem\">\n          {this.task}\n          <span className={deadlineClassList}>{this.deadlineString}</span>\n        </span>\n      );\n    }.bind(this);\n  }\n}\n\nclass ToDoList extends Array {\n  static toSortedByDate(items) {\n    let [deadlines, noDeadlines] = Utilities.partition([...items],\n      (i => i.deadline !== null));\n\n    let [dates, noDates] = Utilities.partition([...deadlines],\n      (i => i.deadlineDate !== null));\n\n    let datesSorted = dates.toSorted(\n      (a, b) => a.deadlineDate - b.deadlineDate);\n\n    function stringCompareFn(a, b) {\n      [a, b] = [a, b].map(i => i.toLowerCase());\n      if (a < b) return -1;\n      else if (a > b) return 1;\n      else return 0;\n    }\n\n    let noDatesSorted = noDates.toSorted(\n      (a, b) => stringCompareFn(a.deadline, b.deadline));\n\n    let noDeadlinesSorted = noDeadlines.toSorted(\n      (a, b) => stringCompareFn(a.task, b.task));\n\n    return new ToDoList(...noDeadlinesSorted, ...noDatesSorted, ...datesSorted);\n  }\n\n  static isSorted(items) {\n    let sorted = ToDoList.toSortedByDate(items);\n    let compared = items.map((item, index) => item === sorted[index]);\n    let tested = compared.every(i => i === true);\n    return tested;\n  }\n\n  static append(items, item) {\n    return [...items, item];\n  }\n\n  static moveWithinArray(items, fromID, toID) {\n    console.log(`Move from item ${fromID} to item ${toID}`);\n    function insertBefore(array, matchFn, item) {\n      let insertPoint = array.findIndex(matchFn);\n      let before = array.slice(0, insertPoint);\n      let after = array.slice(insertPoint);\n      return [...before, item, ...after];\n    }\n\n    let itemToMove = items.find(i => i.id === fromID);\n    let rest = items.filter(i => i !== itemToMove);\n\n    let newItems = [];\n    if (toID === \"bottom\") {\n      console.log(\"Move item to bottom\");\n      newItems = [...rest, itemToMove];\n    } else {\n      console.log(\"Insert item\");\n      newItems = insertBefore(rest, (i => i.id === toID), itemToMove);\n    }\n    return newItems;\n  }\n\n  static toggleDoneStatus(items, item) {\n    let toggledItem = ToDoItem.toggled(item);\n    console.log(`Marking item as ${toggledItem.doneStatus}`);\n\n    let split = items.indexOf(item);\n    let before = items.slice(0, split);\n    let after = items.slice(split + 1);\n    return [...before, toggledItem, ...after];\n  }\n\n  static removeItem(items, item) { \n    return items.filter(i => i !== item);\n  }\n  \n  static setAllItemStatus(items, isDone) {\n    return items.map(i => new ToDoItem({...i, isDone: isDone}));\n  }\n\n  static areAnyLeftToDo(items) {\n    return items.some(i => i.isDone === false);\n  }\n  \n  static areAnyDone(items) {\n    return items.some(i => i.isDone === true);\n  }\n}\n\nexport { ToDoItem, ToDoList };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}