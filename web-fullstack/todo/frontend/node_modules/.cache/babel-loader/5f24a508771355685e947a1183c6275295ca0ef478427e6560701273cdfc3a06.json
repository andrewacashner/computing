{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/components/ToDoItem.js\";\nimport Sugar from \"sugar-date\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ToDoItem {\n  constructor({\n    task,\n    deadline = null,\n    isDone = false\n  }) {\n    this.task = task;\n    this.deadline = deadline;\n    this.deadlineDate = ToDoItem.dateFromString(deadline);\n    this.isDone = isDone;\n    this.id = crypto.randomUUID();\n  }\n  static dateFromString(deadline) {\n    let test, date;\n    if (deadline) {\n      test = Sugar.Date.create(deadline);\n\n      // Note == To check error message\n      date = test == \"Invalid Date\" ? null : test;\n      console.log(\"dateFromString\");\n      console.log(new Sugar.Date(test).isValid().valueOf());\n    }\n    return date;\n  }\n  static doneOrNot(isDone) {\n    return isDone ? \"done\" : \"notDone\";\n  }\n  static activeOrNot(isDone) {\n    return isDone ? \"inactive\" : \"active\";\n  }\n  get doneStatus() {\n    return ToDoItem.doneOrNot(this.isDone);\n  }\n  get activeStatus() {\n    return ToDoItem.activeOrNot(this.isDone);\n  }\n  static toggled(item) {\n    return new ToDoItem({\n      ...item,\n      isDone: !item.isDone\n    });\n  }\n  get deadlineString() {\n    let deadline = \"\";\n    if (this.deadlineDate) {\n      let dateString = Sugar.Date.format(this.deadlineDate, \"%c\");\n      deadline = `(${dateString})`;\n    } else if (this.deadline) {\n      deadline = `(${this.deadline})`;\n    }\n    return deadline;\n  }\n  Span() {\n    return function () {\n      let deadlineClassList = \"todoDeadline\";\n      let test = new Sugar.Date(this.deadlineDate);\n      if (this.deadlineDate && test.isPast().valueOf()) {\n        deadlineClassList += \" pastDue\";\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todoItem\",\n        children: [this.task, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: deadlineClassList,\n          children: this.deadlineString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n    }.bind(this);\n  }\n}","map":{"version":3,"names":["Sugar","jsxDEV","_jsxDEV","ToDoItem","constructor","task","deadline","isDone","deadlineDate","dateFromString","id","crypto","randomUUID","test","date","Date","create","console","log","isValid","valueOf","doneOrNot","activeOrNot","doneStatus","activeStatus","toggled","item","deadlineString","dateString","format","Span","deadlineClassList","isPast","className","children","fileName","_jsxFileName","lineNumber","columnNumber","bind"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/components/ToDoItem.js"],"sourcesContent":["import Sugar from \"sugar-date\";\n\nexport default class ToDoItem {\n  task;\n  deadline;\n  deadlineDate;\n  isDone;\n  id;\n\n  constructor({task, deadline = null, isDone = false}) {\n    this.task = task;\n    this.deadline = deadline;\n    this.deadlineDate = ToDoItem.dateFromString(deadline);\n    this.isDone = isDone;\n    this.id = crypto.randomUUID();\n  }\n  \n  static dateFromString(deadline) {\n    let test, date;\n    if (deadline) {\n      test = Sugar.Date.create(deadline);\n      \n      // Note == To check error message\n      date = (test == \"Invalid Date\") ? null : test;\n      console.log(\"dateFromString\");\n      console.log(new Sugar.Date(test).isValid().valueOf());\n    }\n    return date;\n  }\n\n  static doneOrNot(isDone) {\n    return (isDone) ? \"done\" : \"notDone\";\n  }\n\n  static activeOrNot(isDone) {\n    return (isDone) ? \"inactive\" : \"active\";\n  }\n\n  get doneStatus() {\n    return ToDoItem.doneOrNot(this.isDone);\n  }\n\n  get activeStatus() {\n    return ToDoItem.activeOrNot(this.isDone);\n  }\n\n  static toggled(item) {\n    return new ToDoItem({...item, isDone: !item.isDone});\n  }\n\n  get deadlineString() {\n    let deadline = \"\";\n    if (this.deadlineDate) {\n      let dateString = Sugar.Date.format(this.deadlineDate, \"%c\");\n      deadline = `(${dateString})`;\n    } else if (this.deadline) {\n      deadline = `(${this.deadline})`;\n    }\n    return deadline;\n  }\n  \n  Span() {\n    return function() {\n      let deadlineClassList = \"todoDeadline\";\n\n      let test = new Sugar.Date(this.deadlineDate);\n      if (this.deadlineDate && test.isPast().valueOf()) {\n        deadlineClassList += \" pastDue\";\n      }\n\n      return(\n        <span className=\"todoItem\">\n          {this.task}\n          <span className={deadlineClassList}>{this.deadlineString}</span>\n        </span>\n      );\n    }.bind(this);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}