{"ast":null,"code":"'use strict';\n\nvar Range = require('./Range'),\n  DurationTextFormats = require('../var/DurationTextFormats'),\n  incrementDate = require('./incrementDate'),\n  getDateForRange = require('./getDateForRange'),\n  namespaceAliases = require('../../common/var/namespaceAliases'),\n  getDateIncrementObject = require('./getDateIncrementObject');\nvar sugarDate = namespaceAliases.sugarDate,\n  RANGE_REG_FROM_TO = DurationTextFormats.RANGE_REG_FROM_TO,\n  RANGE_REG_REAR_DURATION = DurationTextFormats.RANGE_REG_REAR_DURATION,\n  RANGE_REG_FRONT_DURATION = DurationTextFormats.RANGE_REG_FRONT_DURATION;\nfunction createDateRangeFromString(str) {\n  var match, datetime, duration, dio, start, end;\n  if (sugarDate.get && (match = str.match(RANGE_REG_FROM_TO))) {\n    start = getDateForRange(match[1].replace('from', 'at'));\n    end = sugarDate.get(start, match[2]);\n    return new Range(start, end);\n  }\n  if (match = str.match(RANGE_REG_FRONT_DURATION)) {\n    duration = match[1];\n    datetime = match[2];\n  }\n  if (match = str.match(RANGE_REG_REAR_DURATION)) {\n    datetime = match[1];\n    duration = match[2];\n  }\n  if (datetime && duration) {\n    start = getDateForRange(datetime);\n    dio = getDateIncrementObject(duration);\n    end = incrementDate(start, dio[0], dio[1]);\n  } else {\n    start = str;\n  }\n  return new Range(getDateForRange(start), getDateForRange(end));\n}\nmodule.exports = createDateRangeFromString;","map":{"version":3,"names":["Range","require","DurationTextFormats","incrementDate","getDateForRange","namespaceAliases","getDateIncrementObject","sugarDate","RANGE_REG_FROM_TO","RANGE_REG_REAR_DURATION","RANGE_REG_FRONT_DURATION","createDateRangeFromString","str","match","datetime","duration","dio","start","end","get","replace","module","exports"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/node_modules/sugar-date/range/internal/createDateRangeFromString.js"],"sourcesContent":["'use strict';\n\nvar Range = require('./Range'),\n    DurationTextFormats = require('../var/DurationTextFormats'),\n    incrementDate = require('./incrementDate'),\n    getDateForRange = require('./getDateForRange'),\n    namespaceAliases = require('../../common/var/namespaceAliases'),\n    getDateIncrementObject = require('./getDateIncrementObject');\n\nvar sugarDate = namespaceAliases.sugarDate,\n    RANGE_REG_FROM_TO = DurationTextFormats.RANGE_REG_FROM_TO,\n    RANGE_REG_REAR_DURATION = DurationTextFormats.RANGE_REG_REAR_DURATION,\n    RANGE_REG_FRONT_DURATION = DurationTextFormats.RANGE_REG_FRONT_DURATION;\n\nfunction createDateRangeFromString(str) {\n  var match, datetime, duration, dio, start, end;\n  if (sugarDate.get && (match = str.match(RANGE_REG_FROM_TO))) {\n    start = getDateForRange(match[1].replace('from', 'at'));\n    end = sugarDate.get(start, match[2]);\n    return new Range(start, end);\n  }\n  if (match = str.match(RANGE_REG_FRONT_DURATION)) {\n    duration = match[1];\n    datetime = match[2];\n  }\n  if (match = str.match(RANGE_REG_REAR_DURATION)) {\n    datetime = match[1];\n    duration = match[2];\n  }\n  if (datetime && duration) {\n    start = getDateForRange(datetime);\n    dio = getDateIncrementObject(duration);\n    end = incrementDate(start, dio[0], dio[1]);\n  } else {\n    start = str;\n  }\n  return new Range(getDateForRange(start), getDateForRange(end));\n}\n\nmodule.exports = createDateRangeFromString;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;EAC1BC,mBAAmB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;EAC3DE,aAAa,GAAGF,OAAO,CAAC,iBAAiB,CAAC;EAC1CG,eAAe,GAAGH,OAAO,CAAC,mBAAmB,CAAC;EAC9CI,gBAAgB,GAAGJ,OAAO,CAAC,mCAAmC,CAAC;EAC/DK,sBAAsB,GAAGL,OAAO,CAAC,0BAA0B,CAAC;AAEhE,IAAIM,SAAS,GAAGF,gBAAgB,CAACE,SAAS;EACtCC,iBAAiB,GAAGN,mBAAmB,CAACM,iBAAiB;EACzDC,uBAAuB,GAAGP,mBAAmB,CAACO,uBAAuB;EACrEC,wBAAwB,GAAGR,mBAAmB,CAACQ,wBAAwB;AAE3E,SAASC,yBAAyBA,CAACC,GAAG,EAAE;EACtC,IAAIC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,GAAG;EAC9C,IAAIX,SAAS,CAACY,GAAG,KAAKN,KAAK,GAAGD,GAAG,CAACC,KAAK,CAACL,iBAAiB,CAAC,CAAC,EAAE;IAC3DS,KAAK,GAAGb,eAAe,CAACS,KAAK,CAAC,CAAC,CAAC,CAACO,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACvDF,GAAG,GAAGX,SAAS,CAACY,GAAG,CAACF,KAAK,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC;IACpC,OAAO,IAAIb,KAAK,CAACiB,KAAK,EAAEC,GAAG,CAAC;EAC9B;EACA,IAAIL,KAAK,GAAGD,GAAG,CAACC,KAAK,CAACH,wBAAwB,CAAC,EAAE;IAC/CK,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC;IACnBC,QAAQ,GAAGD,KAAK,CAAC,CAAC,CAAC;EACrB;EACA,IAAIA,KAAK,GAAGD,GAAG,CAACC,KAAK,CAACJ,uBAAuB,CAAC,EAAE;IAC9CK,QAAQ,GAAGD,KAAK,CAAC,CAAC,CAAC;IACnBE,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC;EACrB;EACA,IAAIC,QAAQ,IAAIC,QAAQ,EAAE;IACxBE,KAAK,GAAGb,eAAe,CAACU,QAAQ,CAAC;IACjCE,GAAG,GAAGV,sBAAsB,CAACS,QAAQ,CAAC;IACtCG,GAAG,GAAGf,aAAa,CAACc,KAAK,EAAED,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,MAAM;IACLC,KAAK,GAAGL,GAAG;EACb;EACA,OAAO,IAAIZ,KAAK,CAACI,eAAe,CAACa,KAAK,CAAC,EAAEb,eAAe,CAACc,GAAG,CAAC,CAAC;AAChE;AAEAG,MAAM,CAACC,OAAO,GAAGX,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}