{"ast":null,"code":"'use strict';\n\nvar LazyLoadedLocales = require('./LazyLoadedLocales'),\n  AmericanEnglishDefinition = require('./AmericanEnglishDefinition'),\n  getNewLocale = require('../internal/getNewLocale');\nvar English, localeManager;\nfunction buildLocales() {\n  function LocaleManager(loc) {\n    this.locales = {};\n    this.add(loc);\n  }\n  LocaleManager.prototype = {\n    get: function (code, fallback) {\n      var loc = this.locales[code];\n      if (!loc && LazyLoadedLocales[code]) {\n        loc = this.add(code, LazyLoadedLocales[code]);\n      } else if (!loc && code) {\n        loc = this.locales[code.slice(0, 2)];\n      }\n      return loc || fallback === false ? loc : this.current;\n    },\n    getAll: function () {\n      return this.locales;\n    },\n    set: function (code) {\n      var loc = this.get(code, false);\n      if (!loc) {\n        throw new TypeError('Invalid Locale: ' + code);\n      }\n      return this.current = loc;\n    },\n    add: function (code, def) {\n      if (!def) {\n        def = code;\n        code = def.code;\n      } else {\n        def.code = code;\n      }\n      var loc = def.compiledFormats ? def : getNewLocale(def);\n      this.locales[code] = loc;\n      if (!this.current) {\n        this.current = loc;\n      }\n      return loc;\n    },\n    remove: function (code) {\n      if (this.current.code === code) {\n        this.current = this.get('en');\n      }\n      return delete this.locales[code];\n    }\n  };\n\n  // Sorry about this guys...\n  English = getNewLocale(AmericanEnglishDefinition);\n  localeManager = new LocaleManager(English);\n}\nbuildLocales();\nmodule.exports = {\n  English: English,\n  localeManager: localeManager\n};","map":{"version":3,"names":["LazyLoadedLocales","require","AmericanEnglishDefinition","getNewLocale","English","localeManager","buildLocales","LocaleManager","loc","locales","add","prototype","get","code","fallback","slice","current","getAll","set","TypeError","def","compiledFormats","remove","module","exports"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/node_modules/sugar-date/date/var/LocaleHelpers.js"],"sourcesContent":["'use strict';\n\nvar LazyLoadedLocales = require('./LazyLoadedLocales'),\n    AmericanEnglishDefinition = require('./AmericanEnglishDefinition'),\n    getNewLocale = require('../internal/getNewLocale');\n\nvar English, localeManager;\n\nfunction buildLocales() {\n\n  function LocaleManager(loc) {\n    this.locales = {};\n    this.add(loc);\n  }\n\n  LocaleManager.prototype = {\n\n    get: function(code, fallback) {\n      var loc = this.locales[code];\n      if (!loc && LazyLoadedLocales[code]) {\n        loc = this.add(code, LazyLoadedLocales[code]);\n      } else if (!loc && code) {\n        loc = this.locales[code.slice(0, 2)];\n      }\n      return loc || fallback === false ? loc : this.current;\n    },\n\n    getAll: function() {\n      return this.locales;\n    },\n\n    set: function(code) {\n      var loc = this.get(code, false);\n      if (!loc) {\n        throw new TypeError('Invalid Locale: ' + code);\n      }\n      return this.current = loc;\n    },\n\n    add: function(code, def) {\n      if (!def) {\n        def = code;\n        code = def.code;\n      } else {\n        def.code = code;\n      }\n      var loc = def.compiledFormats ? def : getNewLocale(def);\n      this.locales[code] = loc;\n      if (!this.current) {\n        this.current = loc;\n      }\n      return loc;\n    },\n\n    remove: function(code) {\n      if (this.current.code === code) {\n        this.current = this.get('en');\n      }\n      return delete this.locales[code];\n    }\n\n  };\n\n  // Sorry about this guys...\n  English = getNewLocale(AmericanEnglishDefinition);\n  localeManager = new LocaleManager(English);\n}\n\nbuildLocales();\n\nmodule.exports = {\n  English: English,\n  localeManager: localeManager\n};"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;EAClDC,yBAAyB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;EAClEE,YAAY,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAEtD,IAAIG,OAAO,EAAEC,aAAa;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAEtB,SAASC,aAAaA,CAACC,GAAG,EAAE;IAC1B,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;IACjB,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC;EACf;EAEAD,aAAa,CAACI,SAAS,GAAG;IAExBC,GAAG,EAAE,SAAAA,CAASC,IAAI,EAAEC,QAAQ,EAAE;MAC5B,IAAIN,GAAG,GAAG,IAAI,CAACC,OAAO,CAACI,IAAI,CAAC;MAC5B,IAAI,CAACL,GAAG,IAAIR,iBAAiB,CAACa,IAAI,CAAC,EAAE;QACnCL,GAAG,GAAG,IAAI,CAACE,GAAG,CAACG,IAAI,EAAEb,iBAAiB,CAACa,IAAI,CAAC,CAAC;MAC/C,CAAC,MAAM,IAAI,CAACL,GAAG,IAAIK,IAAI,EAAE;QACvBL,GAAG,GAAG,IAAI,CAACC,OAAO,CAACI,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACtC;MACA,OAAOP,GAAG,IAAIM,QAAQ,KAAK,KAAK,GAAGN,GAAG,GAAG,IAAI,CAACQ,OAAO;IACvD,CAAC;IAEDC,MAAM,EAAE,SAAAA,CAAA,EAAW;MACjB,OAAO,IAAI,CAACR,OAAO;IACrB,CAAC;IAEDS,GAAG,EAAE,SAAAA,CAASL,IAAI,EAAE;MAClB,IAAIL,GAAG,GAAG,IAAI,CAACI,GAAG,CAACC,IAAI,EAAE,KAAK,CAAC;MAC/B,IAAI,CAACL,GAAG,EAAE;QACR,MAAM,IAAIW,SAAS,CAAC,kBAAkB,GAAGN,IAAI,CAAC;MAChD;MACA,OAAO,IAAI,CAACG,OAAO,GAAGR,GAAG;IAC3B,CAAC;IAEDE,GAAG,EAAE,SAAAA,CAASG,IAAI,EAAEO,GAAG,EAAE;MACvB,IAAI,CAACA,GAAG,EAAE;QACRA,GAAG,GAAGP,IAAI;QACVA,IAAI,GAAGO,GAAG,CAACP,IAAI;MACjB,CAAC,MAAM;QACLO,GAAG,CAACP,IAAI,GAAGA,IAAI;MACjB;MACA,IAAIL,GAAG,GAAGY,GAAG,CAACC,eAAe,GAAGD,GAAG,GAAGjB,YAAY,CAACiB,GAAG,CAAC;MACvD,IAAI,CAACX,OAAO,CAACI,IAAI,CAAC,GAAGL,GAAG;MACxB,IAAI,CAAC,IAAI,CAACQ,OAAO,EAAE;QACjB,IAAI,CAACA,OAAO,GAAGR,GAAG;MACpB;MACA,OAAOA,GAAG;IACZ,CAAC;IAEDc,MAAM,EAAE,SAAAA,CAAST,IAAI,EAAE;MACrB,IAAI,IAAI,CAACG,OAAO,CAACH,IAAI,KAAKA,IAAI,EAAE;QAC9B,IAAI,CAACG,OAAO,GAAG,IAAI,CAACJ,GAAG,CAAC,IAAI,CAAC;MAC/B;MACA,OAAO,OAAO,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC;IAClC;EAEF,CAAC;;EAED;EACAT,OAAO,GAAGD,YAAY,CAACD,yBAAyB,CAAC;EACjDG,aAAa,GAAG,IAAIE,aAAa,CAACH,OAAO,CAAC;AAC5C;AAEAE,YAAY,CAAC,CAAC;AAEdiB,MAAM,CAACC,OAAO,GAAG;EACfpB,OAAO,EAAEA,OAAO;EAChBC,aAAa,EAAEA;AACjB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}