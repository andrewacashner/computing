{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js\",\n  _s2 = $RefreshSig$();\n// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// Add edit button for each item\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { ToDoItem, ToDoList } from \"./components/ToDoItem\";\nimport Utilities from \"./components/Utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction makeNewTaskForm(items, setItems, formDefaults) {\n  return function () {\n    function addNewTask(event) {\n      event.preventDefault();\n      let task = event.target.task.value;\n      let deadline = event.target.deadline.value;\n      if (deadline === \"\") {\n        deadline = null;\n      }\n      if (task) {\n        let newTask = new ToDoItem({\n          task: task,\n          deadline: deadline\n        });\n        console.log(`Add new task '${newTask.task}' with deadline '${newTask.deadline}'`);\n        setItems([...items, newTask]);\n      }\n      event.target.reset();\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newItem\",\n      onSubmit: addNewTask,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newTaskInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newTask\",\n          children: \"New task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"task\",\n          id: \"newTask\",\n          value: formDefaults.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deadlineInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newDeadline\",\n          children: \"Deadline (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"deadline\",\n          id: \"newDeadline\",\n          value: formDefaults.deadline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instructions\",\n          children: [\"Dates in natural language will be converted if possible\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 94\n          }, this), \"(Examples: \", /*#__PURE__*/_jsxDEV(\"q\", {\n            children: \"Tomorrow at 1pm,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 22\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"q\", {\n            children: \"A week from Thursday,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 46\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"q\", {\n            children: \"3/5 at 7am\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 75\n          }, this), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        action: \"submit\",\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  };\n}\nfunction dragListItem(event) {\n  event.dataTransfer.setData(\"text/uuid\", event.target.id);\n}\nfunction isDraggedOverSelf(event) {\n  return event.target.id === event.dataTransfer.getData(\"text/uuid\");\n}\nfunction isDraggedOverNext(event, items) {\n  let dragged = event.dataTransfer.getData(\"text/uuid\");\n  let current = event.target.id;\n  const getIndex = id => items.findIndex(i => i.id === id);\n  return getIndex(current) - getIndex(dragged) === 1;\n}\nfunction makeDragoverListItem(items) {\n  return function (event) {\n    event.preventDefault();\n    if (event.target.tagName === \"LI\" && !isDraggedOverSelf(event) && !isDraggedOverNext(event, items)) {\n      event.target.classList.add(\"gapAbove\");\n    }\n  };\n}\nfunction dragleaveListItem(event) {\n  event.preventDefault();\n  event.target.classList.remove(\"gapAbove\");\n}\nfunction moveWithinArray(items, fromID, toID) {\n  console.log(`Move from item ${fromID} to item ${toID}`);\n  function insertBefore(array, matchFn, item) {\n    let insertPoint = array.findIndex(matchFn);\n    let before = array.slice(0, insertPoint);\n    let after = array.slice(insertPoint);\n    return [...before, item, ...after];\n  }\n  let itemToMove = items.find(i => i.id === fromID);\n  let rest = items.filter(i => i !== itemToMove);\n  let newItems = [];\n  if (toID === \"bottom\") {\n    console.log(\"Move item to bottom\");\n    newItems = [...rest, itemToMove];\n  } else {\n    console.log(\"Insert item\");\n    newItems = insertBefore(rest, i => i.id === toID, itemToMove);\n  }\n  return newItems;\n}\nfunction makeDropListItem(items, setItems) {\n  return function (event) {\n    event.preventDefault();\n    if (items.length > 1) {\n      let fromID = event.dataTransfer.getData(\"text/uuid\");\n\n      // Check if item was dropped below the list items, in the extra space we\n      // leave at bottom of the ol.todo\n      let toID = event.target.className === \"todo\" ? \"bottom\" : event.target.id;\n      if (fromID !== toID && !isDraggedOverNext(event, items)) {\n        let newItems = moveWithinArray(items, fromID, toID);\n        setItems(newItems);\n      }\n    }\n  };\n}\nfunction makeListItems(items, setItems, setFormDefaults) {\n  var _s = $RefreshSig$();\n  function updateItemsWithToggledItem(items, item) {\n    return function () {\n      let toggledItem = ToDoItem.toggled(item);\n      console.log(`Marking item as ${toggledItem.doneStatus}`);\n      let split = items.indexOf(item);\n      let before = items.slice(0, split);\n      let after = items.slice(split + 1);\n      let newItems = [...before, toggledItem, ...after];\n      setItems(newItems);\n    };\n  }\n  function ListItem(item) {\n    _s();\n    let [isButtonShown, setIsButtonShown] = useState(false);\n    let listButtonVisibility = isButtonShown ? \"show\" : \"hide\";\n    function showButton() {\n      setIsButtonShown(true);\n    }\n    function hideButton() {\n      setIsButtonShown(false);\n    }\n    function deleteItem(event) {\n      setItems(items.filter(i => i !== item));\n      console.log(`Deleting item (task: ${item.task})`);\n      event.stopPropagation();\n    }\n    function editItem(event) {\n      setFormDefaults({\n        task: item.task,\n        deadline: item.deadline\n      });\n      setItems(items.filter(i => i !== item));\n      event.stopPropagation();\n    }\n    if (item) {\n      let toggleDoneStatus = updateItemsWithToggledItem(items, item);\n      let ToDoSpan = item.Span();\n\n      // Cancellation X is U+1F5D9\n      // Edit pencil is U+1F589\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: item.id,\n        className: `${item.doneStatus} ${item.activeStatus}`,\n        onClick: toggleDoneStatus,\n        draggable: \"true\",\n        onDragStart: dragListItem,\n        onDragLeave: dragleaveListItem,\n        onMouseEnter: showButton,\n        onMouseLeave: hideButton,\n        children: [/*#__PURE__*/_jsxDEV(ToDoSpan, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: listButtonVisibility,\n          onClick: editItem,\n          children: \"\\uD83D\\uDD89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: listButtonVisibility,\n          onClick: deleteItem,\n          children: \"\\uD83D\\uDDD9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  _s(ListItem, \"THSuRLAaOVkXo3bu6XYLBiKeRUI=\");\n  let dropListItem = makeDropListItem(items, setItems);\n  let dragoverListItem = makeDragoverListItem(items);\n  let [done, notDone] = Utilities.partition(items, i => i.isDone);\n  function ItemsDone() {\n    return done.map(ListItem);\n  }\n  function ItemsNotDone() {\n    return notDone.map(ListItem);\n  }\n  return function () {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"lists\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"todo\",\n        onDragOver: dragoverListItem,\n        onDrop: dropListItem,\n        children: /*#__PURE__*/_jsxDEV(ItemsNotDone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"todoDone\",\n        children: /*#__PURE__*/_jsxDEV(ItemsDone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  };\n}\nfunction makeCheckAllButton(items, setItems) {\n  function setAllItemStatus(isDone) {\n    let newItems = items.map(item => new ToDoItem({\n      ...item,\n      isDone: isDone\n    }));\n    setItems(newItems);\n  }\n  const checkAll = () => setAllItemStatus(true);\n  const uncheckAll = () => setAllItemStatus(false);\n  let checkAllStatus = items.some(i => i.isDone === false);\n  let uncheckAllStatus = items.some(i => i.isDone === true);\n  function clearAll() {\n    setItems([]);\n  }\n  function sortItemsByDate() {\n    setItems(items.toSortedByDate());\n  }\n  return function () {\n    if (items.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoControls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: checkAll,\n          className: ToDoItem.activeOrNot(!checkAllStatus),\n          children: \"Mark all as finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: uncheckAll,\n          className: ToDoItem.activeOrNot(!uncheckAllStatus),\n          children: \"Mark all as unfinished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: sortItemsByDate,\n          className: ToDoItem.activeOrNot(items.isSorted()),\n          children: \"Sort by date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: clearAll,\n          children: \"Clear all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this);\n    }\n  };\n}\nfunction TaskList() {\n  _s2();\n  let [items, setItems] = useState(new ToDoList());\n  let updateItems = newItems => setItems(new ToDoList(...newItems));\n  let [formDefaults, setFormDefaults] = useState({\n    task: \"\",\n    deadline: \"\"\n  });\n  let ListItems = makeListItems(items, updateItems, setFormDefaults);\n  let NewTaskForm = makeNewTaskForm(items, updateItems, formDefaults);\n  let CheckAllButton = makeCheckAllButton(items, updateItems);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Add a new task using the form below. Drag to rearrange tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ListItems, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CheckAllButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n}\n_s2(TaskList, \"CZ41IQxZw0kxmsAWXeZ6VtovCnM=\");\n_c = TaskList;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","ToDoItem","ToDoList","Utilities","jsxDEV","_jsxDEV","makeNewTaskForm","items","setItems","formDefaults","addNewTask","event","preventDefault","task","target","value","deadline","newTask","console","log","reset","className","onSubmit","autoComplete","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","action","dragListItem","dataTransfer","setData","isDraggedOverSelf","getData","isDraggedOverNext","dragged","current","getIndex","findIndex","i","makeDragoverListItem","tagName","classList","add","dragleaveListItem","remove","moveWithinArray","fromID","toID","insertBefore","array","matchFn","item","insertPoint","before","slice","after","itemToMove","find","rest","filter","newItems","makeDropListItem","length","makeListItems","setFormDefaults","_s","$RefreshSig$","updateItemsWithToggledItem","toggledItem","toggled","doneStatus","split","indexOf","ListItem","isButtonShown","setIsButtonShown","listButtonVisibility","showButton","hideButton","deleteItem","stopPropagation","editItem","toggleDoneStatus","ToDoSpan","Span","activeStatus","onClick","draggable","onDragStart","onDragLeave","onMouseEnter","onMouseLeave","dropListItem","dragoverListItem","done","notDone","partition","isDone","ItemsDone","map","ItemsNotDone","onDragOver","onDrop","makeCheckAllButton","setAllItemStatus","checkAll","uncheckAll","checkAllStatus","some","uncheckAllStatus","clearAll","sortItemsByDate","toSortedByDate","activeOrNot","isSorted","TaskList","_s2","updateItems","ListItems","NewTaskForm","CheckAllButton","_c","App","_c2","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js"],"sourcesContent":["// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// (done) Sort by deadline\n// (done) Make sort button inactive when list is already sorted\n// (done) Add delete button for each item (shown on hover)\n// Add edit button for each item\n// Type new item directly into list instead of form\n// Better layout of entries & dates\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { ToDoItem, ToDoList } from \"./components/ToDoItem\";\nimport Utilities from \"./components/Utilities\";\n\nfunction makeNewTaskForm(items, setItems, formDefaults) {\n\n  return function() { \n    function addNewTask (event) {\n      event.preventDefault();\n\n      let task = event.target.task.value;\n\n      let deadline = event.target.deadline.value;\n      if (deadline === \"\") {\n        deadline = null;\n      }\n\n      if (task) {\n        let newTask = new ToDoItem({\n          task: task,\n          deadline: deadline\n        });\n        console.log(`Add new task '${newTask.task}' with deadline '${newTask.deadline}'`);\n\n        setItems([...items, newTask]);\n      }\n      event.target.reset();\n    }\n\n    return(\n      <form className=\"newItem\" onSubmit={addNewTask} autoComplete=\"off\">\n        <div className=\"newTaskInput\">\n          <label htmlFor=\"newTask\">New task:</label>\n          <input type=\"text\" name=\"task\" id=\"newTask\" value={formDefaults.task} />\n        </div>\n        <div className=\"deadlineInput\">\n          <label htmlFor=\"newDeadline\">Deadline (optional):</label>\n          <input type=\"text\" name=\"deadline\" id=\"newDeadline\" value={formDefaults.deadline} />\n          <p className=\"instructions\">Dates in natural language will be converted if possible<br />\n          (Examples: <q>Tomorrow at 1pm,</q> <q>A week from Thursday,</q> <q>3/5 at 7am</q>)</p>\n        </div>\n        <button action=\"submit\">Add task</button>\n      </form>\n    );\n  }\n}\n\nfunction dragListItem(event) {\n  event.dataTransfer.setData(\"text/uuid\", event.target.id);\n}\n\nfunction isDraggedOverSelf(event) {\n  return event.target.id === event.dataTransfer.getData(\"text/uuid\");\n}\n\nfunction isDraggedOverNext(event, items) {\n  let dragged = event.dataTransfer.getData(\"text/uuid\");\n  let current = event.target.id;\n  const getIndex = id => items.findIndex(i => i.id === id);\n  return getIndex(current) - getIndex(dragged) === 1;\n}\n\nfunction makeDragoverListItem(items) {\n  return function(event) {\n    event.preventDefault();\n    if (event.target.tagName === \"LI\" \n      && !isDraggedOverSelf(event) \n      && !isDraggedOverNext(event, items)) {\n      event.target.classList.add(\"gapAbove\");\n    }\n  }\n}\n\nfunction dragleaveListItem(event) {\n  event.preventDefault();\n  event.target.classList.remove(\"gapAbove\");\n}\n\nfunction moveWithinArray(items, fromID, toID) {\n \n  console.log(`Move from item ${fromID} to item ${toID}`);\n  function insertBefore(array, matchFn, item) {\n    let insertPoint = array.findIndex(matchFn);\n    let before = array.slice(0, insertPoint);\n    let after = array.slice(insertPoint);\n    return [...before, item, ...after];\n  }\n\n  let itemToMove = items.find(i => i.id === fromID);\n  let rest = items.filter(i => i !== itemToMove);\n\n  let newItems = [];\n  if (toID === \"bottom\") {\n    console.log(\"Move item to bottom\");\n    newItems = [...rest, itemToMove];\n  } else {\n    console.log(\"Insert item\");\n    newItems = insertBefore(rest, (i => i.id === toID), itemToMove);\n  }\n  return newItems;\n}\n\nfunction makeDropListItem(items, setItems) {\n  return function(event) {\n    event.preventDefault()\n\n    if (items.length > 1) {\n      let fromID = event.dataTransfer.getData(\"text/uuid\");\n\n      // Check if item was dropped below the list items, in the extra space we\n      // leave at bottom of the ol.todo\n      let toID = (event.target.className === \"todo\") \n                  ? \"bottom\" : event.target.id;\n\n      if (fromID !== toID && !isDraggedOverNext(event, items)) {\n        let newItems = moveWithinArray(items, fromID, toID);\n        setItems(newItems);\n      }\n    }\n  }\n}\n\nfunction makeListItems(items, setItems, setFormDefaults) {\n\n  function updateItemsWithToggledItem(items, item) {\n    return function() {\n      let toggledItem = ToDoItem.toggled(item);\n      console.log(`Marking item as ${toggledItem.doneStatus}`);\n\n      let split = items.indexOf(item);\n      let before = items.slice(0, split);\n      let after = items.slice(split + 1);\n      let newItems = [...before, toggledItem, ...after]\n      setItems(newItems);\n    }\n  }\n\n  \n\n  function ListItem(item) {\n    let [isButtonShown, setIsButtonShown] = useState(false);\n    let listButtonVisibility = (isButtonShown) ? \"show\" : \"hide\";\n\n    function showButton() {\n      setIsButtonShown(true);\n    }\n\n    function hideButton() {\n      setIsButtonShown(false);\n    }\n\n    function deleteItem(event) {\n      setItems(items.filter(i => i !== item));\n      console.log(`Deleting item (task: ${item.task})`);\n      event.stopPropagation();\n    }\n\n    function editItem(event) {\n      setFormDefaults({\n        task: item.task,\n        deadline: item.deadline\n      });\n      setItems(items.filter(i => i !== item));\n      event.stopPropagation();\n    }\n\n    if (item) {\n      let toggleDoneStatus = updateItemsWithToggledItem(items, item);\n      let ToDoSpan = item.Span();\n\n      // Cancellation X is U+1F5D9\n      // Edit pencil is U+1F589\n      return (\n        <li key={item.id}\n            id={item.id}\n            className={`${item.doneStatus} ${item.activeStatus}`}\n            onClick={toggleDoneStatus}\n            draggable=\"true\"\n            onDragStart={dragListItem}\n            onDragLeave={dragleaveListItem}\n            onMouseEnter={showButton}\n            onMouseLeave={hideButton}>\n          <ToDoSpan />\n          <button type=\"button\" className={listButtonVisibility}\n                  onClick={editItem}>🖉</button>\n          <button type=\"button\" className={listButtonVisibility} \n                  onClick={deleteItem}>🗙</button>\n        </li>\n      );\n    }\n  }\n\n  let dropListItem = makeDropListItem(items, setItems);\n  let dragoverListItem = makeDragoverListItem(items);\n\n \n  let [done, notDone] = Utilities.partition(items, (i => i.isDone));\n\n  function ItemsDone() {\n    return(done.map(ListItem));\n  }\n\n  function ItemsNotDone() {\n    return(notDone.map(ListItem));\n  }\n\n  return function() {\n    return(\n      <section id=\"lists\">\n        <ol className=\"todo\"\n            onDragOver={dragoverListItem}\n            onDrop={dropListItem}>\n          <ItemsNotDone />\n        </ol>\n        <ol className=\"todoDone\">\n          <ItemsDone />\n        </ol>\n      </section>\n    );\n  }\n}\n\nfunction makeCheckAllButton(items, setItems) {\n\n  function setAllItemStatus(isDone) {\n    let newItems = items.map(item => new ToDoItem({...item, isDone: isDone}));\n    setItems(newItems);\n  }\n\n  const checkAll = () => setAllItemStatus(true);\n  const uncheckAll = () => setAllItemStatus(false);\n \n  let checkAllStatus = items.some(i => i.isDone === false);\n  let uncheckAllStatus = items.some(i => i.isDone === true);\n\n  function clearAll() {\n    setItems([]);\n  }\n\n  function sortItemsByDate() { \n    setItems(items.toSortedByDate());\n  }\n\n\n  return function() {\n    if (items.length > 0) {\n      return(\n        <div className=\"todoControls\">\n          <button type=\"button\" \n                  onClick={checkAll}\n                  className={ToDoItem.activeOrNot(!checkAllStatus)}\n          >Mark all as finished</button>\n          <button type=\"button\" \n                  onClick={uncheckAll}\n                  className={ToDoItem.activeOrNot(!uncheckAllStatus)}\n          >Mark all as unfinished</button>\n          <button type=\"button\" \n                  onClick={sortItemsByDate}\n                  className={ToDoItem.activeOrNot(items.isSorted())}\n          >Sort by date</button>\n          <button type=\"button\" onClick={clearAll}>Clear all</button>\n        </div>\n      );\n    }\n  }\n}\n\nfunction TaskList() {\n  let [items, setItems] = useState(new ToDoList());\n  let updateItems = (newItems) => setItems(new ToDoList(...newItems));\n\n  let [formDefaults, setFormDefaults] = useState({ task: \"\", deadline: \"\" });\n\n  let ListItems = makeListItems(items, updateItems, setFormDefaults);\n  let NewTaskForm = makeNewTaskForm(items, updateItems, formDefaults);\n  let CheckAllButton = makeCheckAllButton(items, updateItems);\n\n  return(\n    <section id=\"todo\">\n    <div className=\"todoList\">\n    <h1>To Do</h1>\n    <p className=\"instructions\">Add a new task using the form below. Drag to rearrange tasks.</p>\n    <ListItems />\n    <CheckAllButton />\n    </div>\n    <NewTaskForm />\n    </section>\n  );\n}\n\nfunction App() {\n  return(<TaskList />);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}