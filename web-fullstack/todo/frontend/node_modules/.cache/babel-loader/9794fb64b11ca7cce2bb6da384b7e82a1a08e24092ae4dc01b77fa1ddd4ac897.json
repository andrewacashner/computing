{"ast":null,"code":"import Sugar from \"sugar-date\";\nexport default class ToDoItem {\n  constructor({\n    task,\n    deadline = null,\n    isDone = false\n  }) {\n    this.task = task;\n    this.deadline = deadline;\n    this.deadlineDate = deadline ? Sugar.Date.create(deadline) : null;\n    this.isDone = isDone;\n    this.id = crypto.randomUUID();\n  }\n  static doneOrNot(isDone) {\n    return isDone ? \"done\" : \"notDone\";\n  }\n  static activeOrNot(isDone) {\n    return isDone ? \"inactive\" : \"active\";\n  }\n  get doneStatus() {\n    return ToDoItem.doneOrNot(this.isDone);\n  }\n  get activeStatus() {\n    return ToDoItem.activeOrNot(this.isDone);\n  }\n  static toggled(item) {\n    return new ToDoItem({\n      ...item,\n      isDone: !item.isDone\n    });\n  }\n  toString() {\n    let deadline = this.deadline ? this.deadline : \"\";\n    if (this.deadlineDate) {\n      deadline += \", \" + Sugar.Date.format(this.deadlineDate, \"%Y/%m/%d\");\n      deadline = ` (${deadline})`;\n    }\n    return `${this.task}${deadline}`;\n  }\n}","map":{"version":3,"names":["Sugar","ToDoItem","constructor","task","deadline","isDone","deadlineDate","Date","create","id","crypto","randomUUID","doneOrNot","activeOrNot","doneStatus","activeStatus","toggled","item","toString","format"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/components/ToDoItem.js"],"sourcesContent":["import Sugar from \"sugar-date\";\n\nexport default class ToDoItem {\n  task;\n  deadline;\n  deadlineDate;\n  isDone;\n  id;\n\n  constructor({task, deadline = null, isDone = false}) {\n    this.task = task;\n    this.deadline = deadline;\n    this.deadlineDate = (deadline) ? Sugar.Date.create(deadline): null;\n    this.isDone = isDone;\n    this.id = crypto.randomUUID();\n  }\n\n  static doneOrNot(isDone) {\n    return (isDone) ? \"done\" : \"notDone\";\n  }\n\n  static activeOrNot(isDone) {\n    return (isDone) ? \"inactive\" : \"active\";\n  }\n\n  get doneStatus() {\n    return ToDoItem.doneOrNot(this.isDone);\n  }\n\n  get activeStatus() {\n    return ToDoItem.activeOrNot(this.isDone);\n  }\n\n  static toggled(item) {\n    return new ToDoItem({...item, isDone: !item.isDone});\n  }\n\n  toString() {\n    let deadline = (this.deadline) ? this.deadline : \"\";\n    if (this.deadlineDate) {\n      deadline += \", \" + Sugar.Date.format(this.deadlineDate, \"%Y/%m/%d\"); \n      deadline = ` (${deadline})`;\n    } \n    return `${this.task}${deadline}`;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,YAAY;AAE9B,eAAe,MAAMC,QAAQ,CAAC;EAO5BC,WAAWA,CAAC;IAACC,IAAI;IAAEC,QAAQ,GAAG,IAAI;IAAEC,MAAM,GAAG;EAAK,CAAC,EAAE;IACnD,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,YAAY,GAAIF,QAAQ,GAAIJ,KAAK,CAACO,IAAI,CAACC,MAAM,CAACJ,QAAQ,CAAC,GAAE,IAAI;IAClE,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACI,EAAE,GAAGC,MAAM,CAACC,UAAU,CAAC,CAAC;EAC/B;EAEA,OAAOC,SAASA,CAACP,MAAM,EAAE;IACvB,OAAQA,MAAM,GAAI,MAAM,GAAG,SAAS;EACtC;EAEA,OAAOQ,WAAWA,CAACR,MAAM,EAAE;IACzB,OAAQA,MAAM,GAAI,UAAU,GAAG,QAAQ;EACzC;EAEA,IAAIS,UAAUA,CAAA,EAAG;IACf,OAAOb,QAAQ,CAACW,SAAS,CAAC,IAAI,CAACP,MAAM,CAAC;EACxC;EAEA,IAAIU,YAAYA,CAAA,EAAG;IACjB,OAAOd,QAAQ,CAACY,WAAW,CAAC,IAAI,CAACR,MAAM,CAAC;EAC1C;EAEA,OAAOW,OAAOA,CAACC,IAAI,EAAE;IACnB,OAAO,IAAIhB,QAAQ,CAAC;MAAC,GAAGgB,IAAI;MAAEZ,MAAM,EAAE,CAACY,IAAI,CAACZ;IAAM,CAAC,CAAC;EACtD;EAEAa,QAAQA,CAAA,EAAG;IACT,IAAId,QAAQ,GAAI,IAAI,CAACA,QAAQ,GAAI,IAAI,CAACA,QAAQ,GAAG,EAAE;IACnD,IAAI,IAAI,CAACE,YAAY,EAAE;MACrBF,QAAQ,IAAI,IAAI,GAAGJ,KAAK,CAACO,IAAI,CAACY,MAAM,CAAC,IAAI,CAACb,YAAY,EAAE,UAAU,CAAC;MACnEF,QAAQ,GAAI,KAAIA,QAAS,GAAE;IAC7B;IACA,OAAQ,GAAE,IAAI,CAACD,IAAK,GAAEC,QAAS,EAAC;EAClC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}