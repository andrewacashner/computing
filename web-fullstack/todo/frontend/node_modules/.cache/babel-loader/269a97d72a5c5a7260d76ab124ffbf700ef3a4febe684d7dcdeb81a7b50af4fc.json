{"ast":null,"code":"var _jsxFileName = \"/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js\",\n  _s = $RefreshSig$();\n// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// Sort by deadline\n// Type new item directly into list instead of form\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport ToDoItem from \"./components/ToDoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction partition(array, test) {\n  let results = {\n    true: [],\n    false: []\n  };\n  array.forEach(i => results[test(i)].push(i));\n  return [results.true, results.false];\n}\nfunction stringCompareFn(a, b) {\n  let [aa, bb] = [a, b].map(i => i.toLowerCase());\n  if (aa < bb) return -1;else if (aa > bb) return 1;else return 0;\n}\nfunction makeNewTaskForm(items, setItems) {\n  return function () {\n    function addNewTask(event) {\n      event.preventDefault();\n      let task = event.target.task.value;\n      if (task) {\n        let newTask = new ToDoItem({\n          task: event.target.task.value,\n          deadline: event.target.deadline.value\n        });\n        console.log(`Add new task '${newTask.task}'`);\n        setItems([...items, newTask]);\n      }\n      event.target.reset();\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newItem\",\n      onSubmit: addNewTask,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newTaskInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newTask\",\n          children: \"New task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"task\",\n          id: \"newTask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deadlineInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newDeadline\",\n          children: \"Deadline (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"deadline\",\n          id: \"newDeadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instructions\",\n          children: [\"Dates in natural language will be converted if possible\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 94\n          }, this), \"(Examples: \", /*#__PURE__*/_jsxDEV(\"q\", {\n            children: \"Tomorrow at 1pm,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 22\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"q\", {\n            children: \"A week from Thursday,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 46\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"q\", {\n            children: \"3/5 at 7am\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 75\n          }, this), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        action: \"submit\",\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  };\n}\nfunction dragListItem(event) {\n  event.dataTransfer.setData(\"text/uuid\", event.target.id);\n}\nfunction isDraggedOverSelf(event) {\n  return event.target.id === event.dataTransfer.getData(\"text/uuid\");\n}\nfunction isDraggedOverNext(event, items) {\n  let dragged = event.dataTransfer.getData(\"text/uuid\");\n  let current = event.target.id;\n  const getIndex = id => items.findIndex(i => i.id === id);\n  return getIndex(current) - getIndex(dragged) === 1;\n}\nfunction makeDragoverListItem(items) {\n  return function (event) {\n    event.preventDefault();\n    if (event.target.tagName === \"LI\" && !isDraggedOverSelf(event) && !isDraggedOverNext(event, items)) {\n      event.target.classList.add(\"gapAbove\");\n    }\n  };\n}\nfunction dragleaveListItem(event) {\n  event.preventDefault();\n  event.target.classList.remove(\"gapAbove\");\n}\nfunction moveWithinArray(items, fromID, toID) {\n  console.log(`Move from item ${fromID} to item ${toID}`);\n  function insertBefore(array, matchFn, item) {\n    let insertPoint = array.findIndex(matchFn);\n    let before = array.slice(0, insertPoint);\n    let after = array.slice(insertPoint);\n    return [...before, item, ...after];\n  }\n  let itemToMove = items.find(i => i.id === fromID);\n  let rest = items.filter(i => i !== itemToMove);\n  let newItems = [];\n  if (toID === \"bottom\") {\n    console.log(\"Move item to bottom\");\n    newItems = [...rest, itemToMove];\n  } else {\n    console.log(\"Insert item\");\n    newItems = insertBefore(rest, i => i.id === toID, itemToMove);\n  }\n  return newItems;\n}\nfunction makeDropListItem(items, setItems) {\n  return function (event) {\n    event.preventDefault();\n    if (items.length > 1) {\n      let fromID = event.dataTransfer.getData(\"text/uuid\");\n\n      // Check if item was dropped below the list items, in the extra space we\n      // leave at bottom of the ol.todo\n      let toID = event.target.className === \"todo\" ? \"bottom\" : event.target.id;\n      if (fromID !== toID && !isDraggedOverNext(event, items)) {\n        let newItems = moveWithinArray(items, fromID, toID);\n        setItems(newItems);\n      }\n    }\n  };\n}\nfunction makeListItems(items, setItems) {\n  function updateItemsWithToggledItem(items, item) {\n    return function () {\n      let toggledItem = ToDoItem.toggled(item);\n      console.log(`Marking item as ${toggledItem.doneStatus}`);\n      let split = items.indexOf(item);\n      let before = items.slice(0, split);\n      let after = items.slice(split + 1);\n      let newItems = [...before, toggledItem, ...after];\n      setItems(newItems);\n    };\n  }\n  function ListItem(item) {\n    if (item) {\n      let toggleDoneStatus = updateItemsWithToggledItem(items, item);\n      let ToDoSpan = item.Span();\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: item.id,\n        className: `${item.doneStatus} ${item.activeStatus}`,\n        onClick: toggleDoneStatus,\n        draggable: \"true\",\n        onDragStart: dragListItem,\n        onDragLeave: dragleaveListItem,\n        children: /*#__PURE__*/_jsxDEV(ToDoSpan, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  let dropListItem = makeDropListItem(items, setItems);\n  let dragoverListItem = makeDragoverListItem(items);\n  let [done, notDone] = partition(items, i => i.isDone);\n  function ItemsDone() {\n    return done.map(ListItem);\n  }\n  function ItemsNotDone() {\n    return notDone.map(ListItem);\n  }\n  return function () {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"lists\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"todo\",\n        onDragOver: dragoverListItem,\n        onDrop: dropListItem,\n        children: /*#__PURE__*/_jsxDEV(ItemsNotDone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"todoDone\",\n        children: /*#__PURE__*/_jsxDEV(ItemsDone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  };\n}\nfunction makeCheckAllButton(items, setItems) {\n  function setAllItemStatus(isDone) {\n    let newItems = items.map(item => new ToDoItem({\n      ...item,\n      isDone: isDone\n    }));\n    setItems(newItems);\n  }\n  const checkAll = () => setAllItemStatus(true);\n  const uncheckAll = () => setAllItemStatus(false);\n  let checkAllStatus = items.some(i => i.isDone === false);\n  let uncheckAllStatus = items.some(i => i.isDone === true);\n  function clearAll() {\n    setItems([]);\n  }\n  function sortByDate() {\n    let [dates, noDates] = partition(items, i => i.deadlineDate !== null);\n    let datesSorted = dates.toSorted((a, b) => a.deadlineDate - b.deadlineDate);\n    let noDatesSorted = noDates.sort((a, b) => stringCompareFn(a.deadline, b.deadline));\n    setItems([...datesSorted, ...noDatesSorted]);\n  }\n  return function () {\n    if (items.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoControls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: checkAll,\n          className: ToDoItem.activeOrNot(!checkAllStatus),\n          children: \"Mark all as finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: uncheckAll,\n          className: ToDoItem.activeOrNot(!uncheckAllStatus),\n          children: \"Mark all as unfinished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: sortByDate,\n          children: \"Sort by date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: clearAll,\n          children: \"Clear all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this);\n    }\n  };\n}\nfunction ToDoList() {\n  _s();\n  let [items, setItems] = useState([]);\n  let ListItems = makeListItems(items, setItems);\n  let NewTaskForm = makeNewTaskForm(items, setItems);\n  let CheckAllButton = makeCheckAllButton(items, setItems);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Add a new task using the form below. Drag to rearrange tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItems, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckAllButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = ToDoList;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ToDoList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToDoList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","ToDoItem","jsxDEV","_jsxDEV","partition","array","test","results","true","false","forEach","i","push","stringCompareFn","a","b","aa","bb","map","toLowerCase","makeNewTaskForm","items","setItems","addNewTask","event","preventDefault","task","target","value","newTask","deadline","console","log","reset","className","onSubmit","autoComplete","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","action","dragListItem","dataTransfer","setData","isDraggedOverSelf","getData","isDraggedOverNext","dragged","current","getIndex","findIndex","makeDragoverListItem","tagName","classList","add","dragleaveListItem","remove","moveWithinArray","fromID","toID","insertBefore","matchFn","item","insertPoint","before","slice","after","itemToMove","find","rest","filter","newItems","makeDropListItem","length","makeListItems","updateItemsWithToggledItem","toggledItem","toggled","doneStatus","split","indexOf","ListItem","toggleDoneStatus","ToDoSpan","Span","activeStatus","onClick","draggable","onDragStart","onDragLeave","dropListItem","dragoverListItem","done","notDone","isDone","ItemsDone","ItemsNotDone","onDragOver","onDrop","makeCheckAllButton","setAllItemStatus","checkAll","uncheckAll","checkAllStatus","some","uncheckAllStatus","clearAll","sortByDate","dates","noDates","deadlineDate","datesSorted","toSorted","noDatesSorted","sort","activeOrNot","ToDoList","_s","ListItems","NewTaskForm","CheckAllButton","_c","App","_c2","$RefreshReg$"],"sources":["/home/andrewacashner/Documents/computing/javascript/react/todo/src/App.js"],"sourcesContent":["// To Do list\n// Andrew Cashner\n// 2024/02/23\n//\n// TODO possibilities\n// (rejected) Only show Deadline input after new task is entered\n// (done) Rearranging entries\n// (done) Button to mark all complete or incomplete\n// (done) Button to clear all\n// (done) Use Date for deadline\n// (done) Put date in span for custom format (e.g. red if past due)\n// (done) Show completed items in separate list (move when completed)\n// Sort by deadline\n// Type new item directly into list instead of form\n// Editing entries in-list\n// Nested lists\n// Log in and save lists\n// Multiple named lists\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport ToDoItem from \"./components/ToDoItem\";\n\nfunction partition(array, test) {\n  let results = { true: [], false: [] };\n  array.forEach(i => results[(test(i))].push(i));\n  return [results.true, results.false];\n}\n\nfunction stringCompareFn(a, b) {\n  let [aa, bb] = [a, b].map(i => i.toLowerCase());\n  if (aa < bb) return -1;\n  else if (aa > bb) return 1;\n  else return 0;\n}\n \nfunction makeNewTaskForm(items, setItems) {\n\n  return function() {\n    function addNewTask (event) {\n      event.preventDefault();\n\n      let task = event.target.task.value;\n\n      if (task) {\n        let newTask = new ToDoItem({\n          task: event.target.task.value, \n          deadline: event.target.deadline.value\n        });\n        console.log(`Add new task '${newTask.task}'`);\n\n        setItems([...items, newTask]);\n      }\n      event.target.reset();\n    }\n\n    return(\n      <form className=\"newItem\" onSubmit={addNewTask} autoComplete=\"off\">\n        <div className=\"newTaskInput\">\n          <label htmlFor=\"newTask\">New task:</label>\n          <input type=\"text\" name=\"task\" id=\"newTask\" />\n        </div>\n        <div className=\"deadlineInput\">\n          <label htmlFor=\"newDeadline\">Deadline (optional):</label>\n          <input type=\"text\" name=\"deadline\" id=\"newDeadline\" />\n          <p className=\"instructions\">Dates in natural language will be converted if possible<br />\n          (Examples: <q>Tomorrow at 1pm,</q> <q>A week from Thursday,</q> <q>3/5 at 7am</q>)</p>\n        </div>\n        <button action=\"submit\">Add task</button>\n      </form>\n    );\n  }\n}\n\nfunction dragListItem(event) {\n  event.dataTransfer.setData(\"text/uuid\", event.target.id);\n}\n\nfunction isDraggedOverSelf(event) {\n  return event.target.id === event.dataTransfer.getData(\"text/uuid\");\n}\n\nfunction isDraggedOverNext(event, items) {\n  let dragged = event.dataTransfer.getData(\"text/uuid\");\n  let current = event.target.id;\n  const getIndex = id => items.findIndex(i => i.id === id);\n  return getIndex(current) - getIndex(dragged) === 1;\n}\n\nfunction makeDragoverListItem(items) {\n  return function(event) {\n    event.preventDefault();\n    if (event.target.tagName === \"LI\" \n      && !isDraggedOverSelf(event) \n      && !isDraggedOverNext(event, items)) {\n      event.target.classList.add(\"gapAbove\");\n    }\n  }\n}\n\nfunction dragleaveListItem(event) {\n  event.preventDefault();\n  event.target.classList.remove(\"gapAbove\");\n}\n\nfunction moveWithinArray(items, fromID, toID) {\n \n  console.log(`Move from item ${fromID} to item ${toID}`);\n  function insertBefore(array, matchFn, item) {\n    let insertPoint = array.findIndex(matchFn);\n    let before = array.slice(0, insertPoint);\n    let after = array.slice(insertPoint);\n    return [...before, item, ...after];\n  }\n\n  let itemToMove = items.find(i => i.id === fromID);\n  let rest = items.filter(i => i !== itemToMove);\n\n  let newItems = [];\n  if (toID === \"bottom\") {\n    console.log(\"Move item to bottom\");\n    newItems = [...rest, itemToMove];\n  } else {\n    console.log(\"Insert item\");\n    newItems = insertBefore(rest, (i => i.id === toID), itemToMove);\n  }\n  return newItems;\n}\n\nfunction makeDropListItem(items, setItems) {\n  return function(event) {\n    event.preventDefault()\n\n    if (items.length > 1) {\n      let fromID = event.dataTransfer.getData(\"text/uuid\");\n\n      // Check if item was dropped below the list items, in the extra space we\n      // leave at bottom of the ol.todo\n      let toID = (event.target.className === \"todo\") \n                  ? \"bottom\" : event.target.id;\n\n      if (fromID !== toID && !isDraggedOverNext(event, items)) {\n        let newItems = moveWithinArray(items, fromID, toID);\n        setItems(newItems);\n      }\n    }\n  }\n}\n\nfunction makeListItems(items, setItems) {\n\n  function updateItemsWithToggledItem(items, item) {\n    return function() {\n      let toggledItem = ToDoItem.toggled(item);\n      console.log(`Marking item as ${toggledItem.doneStatus}`);\n\n      let split = items.indexOf(item);\n      let before = items.slice(0, split);\n      let after = items.slice(split + 1);\n      let newItems = [...before, toggledItem, ...after]\n      setItems(newItems);\n    }\n  }\n\n  function ListItem(item) {\n    if (item) {\n      let toggleDoneStatus = updateItemsWithToggledItem(items, item);\n      let ToDoSpan = item.Span();\n\n      return (\n        <li key={item.id}\n            id={item.id}\n            className={`${item.doneStatus} ${item.activeStatus}`}\n            onClick={toggleDoneStatus}\n            draggable=\"true\"\n            onDragStart={dragListItem}\n            onDragLeave={dragleaveListItem}>\n          <ToDoSpan />\n        </li>\n      );\n    }\n  }\n\n  let dropListItem = makeDropListItem(items, setItems);\n  let dragoverListItem = makeDragoverListItem(items);\n\n \n  let [done, notDone] = partition(items, (i => i.isDone));\n\n  function ItemsDone() {\n    return(done.map(ListItem));\n  }\n\n  function ItemsNotDone() {\n    return(notDone.map(ListItem));\n  }\n\n  return function() {\n    return(\n      <section id=\"lists\">\n        <ol className=\"todo\"\n            onDragOver={dragoverListItem}\n            onDrop={dropListItem}>\n          <ItemsNotDone />\n        </ol>\n        <ol className=\"todoDone\">\n          <ItemsDone />\n        </ol>\n      </section>\n    );\n  }\n}\n\nfunction makeCheckAllButton(items, setItems) {\n\n  function setAllItemStatus(isDone) {\n    let newItems = items.map(item => new ToDoItem({...item, isDone: isDone}));\n    setItems(newItems);\n  }\n\n  const checkAll = () => setAllItemStatus(true);\n  const uncheckAll = () => setAllItemStatus(false);\n \n  let checkAllStatus = items.some(i => i.isDone === false);\n  let uncheckAllStatus = items.some(i => i.isDone === true);\n\n  function clearAll() {\n    setItems([]);\n  }\n\n  function sortByDate() {\n    let [dates, noDates] = partition(items, (i => i.deadlineDate !== null));\n\n    let datesSorted = dates.toSorted(\n      (a, b) => a.deadlineDate - b.deadlineDate);\n\n    let noDatesSorted = noDates.sort(\n      (a, b) => stringCompareFn(a.deadline, b.deadline));\n      \n    setItems([...datesSorted, ...noDatesSorted]);\n  }\n\n  return function() {\n    if (items.length > 0) {\n      return(\n        <div className=\"todoControls\">\n          <button type=\"button\" \n                  onClick={checkAll}\n                  className={ToDoItem.activeOrNot(!checkAllStatus)}\n          >Mark all as finished</button>\n          <button type=\"button\" \n                  onClick={uncheckAll}\n                  className={ToDoItem.activeOrNot(!uncheckAllStatus)}\n          >Mark all as unfinished</button>\n          <button type=\"button\" onClick={sortByDate}>Sort by date</button>\n          <button type=\"button\" onClick={clearAll}>Clear all</button>\n        </div>\n      );\n    }\n  }\n}\n\nfunction ToDoList() {\n  let [items, setItems] = useState([]);\n  \n  let ListItems = makeListItems(items, setItems);\n  let NewTaskForm = makeNewTaskForm(items, setItems);\n  let CheckAllButton = makeCheckAllButton(items, setItems);\n\n  return(\n    <section id=\"todo\">\n      <div className=\"todoList\">\n        <h1>To Do</h1>\n        <p className=\"instructions\">Add a new task using the form below. Drag to rearrange tasks.</p>\n        <ListItems />\n        <CheckAllButton />\n      </div>\n      <NewTaskForm />\n    </section>\n  );\n}\n\nfunction App() {\n  return(<ToDoList />);\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,SAASA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC9B,IAAIC,OAAO,GAAG;IAAEC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC;EACrCJ,KAAK,CAACK,OAAO,CAACC,CAAC,IAAIJ,OAAO,CAAED,IAAI,CAACK,CAAC,CAAC,CAAE,CAACC,IAAI,CAACD,CAAC,CAAC,CAAC;EAC9C,OAAO,CAACJ,OAAO,CAACC,IAAI,EAAED,OAAO,CAACE,KAAK,CAAC;AACtC;AAEA,SAASI,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC7B,IAAI,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAG,CAACH,CAAC,EAAEC,CAAC,CAAC,CAACG,GAAG,CAACP,CAAC,IAAIA,CAAC,CAACQ,WAAW,CAAC,CAAC,CAAC;EAC/C,IAAIH,EAAE,GAAGC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,KAClB,IAAID,EAAE,GAAGC,EAAE,EAAE,OAAO,CAAC,CAAC,KACtB,OAAO,CAAC;AACf;AAEA,SAASG,eAAeA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAExC,OAAO,YAAW;IAChB,SAASC,UAAUA,CAAEC,KAAK,EAAE;MAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;MAEtB,IAAIC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAACD,IAAI,CAACE,KAAK;MAElC,IAAIF,IAAI,EAAE;QACR,IAAIG,OAAO,GAAG,IAAI5B,QAAQ,CAAC;UACzByB,IAAI,EAAEF,KAAK,CAACG,MAAM,CAACD,IAAI,CAACE,KAAK;UAC7BE,QAAQ,EAAEN,KAAK,CAACG,MAAM,CAACG,QAAQ,CAACF;QAClC,CAAC,CAAC;QACFG,OAAO,CAACC,GAAG,CAAE,iBAAgBH,OAAO,CAACH,IAAK,GAAE,CAAC;QAE7CJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEQ,OAAO,CAAC,CAAC;MAC/B;MACAL,KAAK,CAACG,MAAM,CAACM,KAAK,CAAC,CAAC;IACtB;IAEA,oBACE9B,OAAA;MAAM+B,SAAS,EAAC,SAAS;MAACC,QAAQ,EAAEZ,UAAW;MAACa,YAAY,EAAC,KAAK;MAAAC,QAAA,gBAChElC,OAAA;QAAK+B,SAAS,EAAC,cAAc;QAAAG,QAAA,gBAC3BlC,OAAA;UAAOmC,OAAO,EAAC,SAAS;UAAAD,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CvC,OAAA;UAAOwC,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC;QAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACNvC,OAAA;QAAK+B,SAAS,EAAC,eAAe;QAAAG,QAAA,gBAC5BlC,OAAA;UAAOmC,OAAO,EAAC,aAAa;UAAAD,QAAA,EAAC;QAAoB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDvC,OAAA;UAAOwC,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,EAAE,EAAC;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtDvC,OAAA;UAAG+B,SAAS,EAAC,cAAc;UAAAG,QAAA,GAAC,yDAAuD,eAAAlC,OAAA;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9E,eAAAvC,OAAA;YAAAkC,QAAA,EAAG;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,eAAAvC,OAAA;YAAAkC,QAAA,EAAG;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,eAAAvC,OAAA;YAAAkC,QAAA,EAAG;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eACNvC,OAAA;QAAQ2C,MAAM,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEX,CAAC;AACH;AAEA,SAASK,YAAYA,CAACvB,KAAK,EAAE;EAC3BA,KAAK,CAACwB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEzB,KAAK,CAACG,MAAM,CAACkB,EAAE,CAAC;AAC1D;AAEA,SAASK,iBAAiBA,CAAC1B,KAAK,EAAE;EAChC,OAAOA,KAAK,CAACG,MAAM,CAACkB,EAAE,KAAKrB,KAAK,CAACwB,YAAY,CAACG,OAAO,CAAC,WAAW,CAAC;AACpE;AAEA,SAASC,iBAAiBA,CAAC5B,KAAK,EAAEH,KAAK,EAAE;EACvC,IAAIgC,OAAO,GAAG7B,KAAK,CAACwB,YAAY,CAACG,OAAO,CAAC,WAAW,CAAC;EACrD,IAAIG,OAAO,GAAG9B,KAAK,CAACG,MAAM,CAACkB,EAAE;EAC7B,MAAMU,QAAQ,GAAGV,EAAE,IAAIxB,KAAK,CAACmC,SAAS,CAAC7C,CAAC,IAAIA,CAAC,CAACkC,EAAE,KAAKA,EAAE,CAAC;EACxD,OAAOU,QAAQ,CAACD,OAAO,CAAC,GAAGC,QAAQ,CAACF,OAAO,CAAC,KAAK,CAAC;AACpD;AAEA,SAASI,oBAAoBA,CAACpC,KAAK,EAAE;EACnC,OAAO,UAASG,KAAK,EAAE;IACrBA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAID,KAAK,CAACG,MAAM,CAAC+B,OAAO,KAAK,IAAI,IAC5B,CAACR,iBAAiB,CAAC1B,KAAK,CAAC,IACzB,CAAC4B,iBAAiB,CAAC5B,KAAK,EAAEH,KAAK,CAAC,EAAE;MACrCG,KAAK,CAACG,MAAM,CAACgC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;IACxC;EACF,CAAC;AACH;AAEA,SAASC,iBAAiBA,CAACrC,KAAK,EAAE;EAChCA,KAAK,CAACC,cAAc,CAAC,CAAC;EACtBD,KAAK,CAACG,MAAM,CAACgC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;AAC3C;AAEA,SAASC,eAAeA,CAAC1C,KAAK,EAAE2C,MAAM,EAAEC,IAAI,EAAE;EAE5ClC,OAAO,CAACC,GAAG,CAAE,kBAAiBgC,MAAO,YAAWC,IAAK,EAAC,CAAC;EACvD,SAASC,YAAYA,CAAC7D,KAAK,EAAE8D,OAAO,EAAEC,IAAI,EAAE;IAC1C,IAAIC,WAAW,GAAGhE,KAAK,CAACmD,SAAS,CAACW,OAAO,CAAC;IAC1C,IAAIG,MAAM,GAAGjE,KAAK,CAACkE,KAAK,CAAC,CAAC,EAAEF,WAAW,CAAC;IACxC,IAAIG,KAAK,GAAGnE,KAAK,CAACkE,KAAK,CAACF,WAAW,CAAC;IACpC,OAAO,CAAC,GAAGC,MAAM,EAAEF,IAAI,EAAE,GAAGI,KAAK,CAAC;EACpC;EAEA,IAAIC,UAAU,GAAGpD,KAAK,CAACqD,IAAI,CAAC/D,CAAC,IAAIA,CAAC,CAACkC,EAAE,KAAKmB,MAAM,CAAC;EACjD,IAAIW,IAAI,GAAGtD,KAAK,CAACuD,MAAM,CAACjE,CAAC,IAAIA,CAAC,KAAK8D,UAAU,CAAC;EAE9C,IAAII,QAAQ,GAAG,EAAE;EACjB,IAAIZ,IAAI,KAAK,QAAQ,EAAE;IACrBlC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC6C,QAAQ,GAAG,CAAC,GAAGF,IAAI,EAAEF,UAAU,CAAC;EAClC,CAAC,MAAM;IACL1C,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B6C,QAAQ,GAAGX,YAAY,CAACS,IAAI,EAAGhE,CAAC,IAAIA,CAAC,CAACkC,EAAE,KAAKoB,IAAI,EAAGQ,UAAU,CAAC;EACjE;EACA,OAAOI,QAAQ;AACjB;AAEA,SAASC,gBAAgBA,CAACzD,KAAK,EAAEC,QAAQ,EAAE;EACzC,OAAO,UAASE,KAAK,EAAE;IACrBA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIJ,KAAK,CAAC0D,MAAM,GAAG,CAAC,EAAE;MACpB,IAAIf,MAAM,GAAGxC,KAAK,CAACwB,YAAY,CAACG,OAAO,CAAC,WAAW,CAAC;;MAEpD;MACA;MACA,IAAIc,IAAI,GAAIzC,KAAK,CAACG,MAAM,CAACO,SAAS,KAAK,MAAM,GAC/B,QAAQ,GAAGV,KAAK,CAACG,MAAM,CAACkB,EAAE;MAExC,IAAImB,MAAM,KAAKC,IAAI,IAAI,CAACb,iBAAiB,CAAC5B,KAAK,EAAEH,KAAK,CAAC,EAAE;QACvD,IAAIwD,QAAQ,GAAGd,eAAe,CAAC1C,KAAK,EAAE2C,MAAM,EAAEC,IAAI,CAAC;QACnD3C,QAAQ,CAACuD,QAAQ,CAAC;MACpB;IACF;EACF,CAAC;AACH;AAEA,SAASG,aAAaA,CAAC3D,KAAK,EAAEC,QAAQ,EAAE;EAEtC,SAAS2D,0BAA0BA,CAAC5D,KAAK,EAAE+C,IAAI,EAAE;IAC/C,OAAO,YAAW;MAChB,IAAIc,WAAW,GAAGjF,QAAQ,CAACkF,OAAO,CAACf,IAAI,CAAC;MACxCrC,OAAO,CAACC,GAAG,CAAE,mBAAkBkD,WAAW,CAACE,UAAW,EAAC,CAAC;MAExD,IAAIC,KAAK,GAAGhE,KAAK,CAACiE,OAAO,CAAClB,IAAI,CAAC;MAC/B,IAAIE,MAAM,GAAGjD,KAAK,CAACkD,KAAK,CAAC,CAAC,EAAEc,KAAK,CAAC;MAClC,IAAIb,KAAK,GAAGnD,KAAK,CAACkD,KAAK,CAACc,KAAK,GAAG,CAAC,CAAC;MAClC,IAAIR,QAAQ,GAAG,CAAC,GAAGP,MAAM,EAAEY,WAAW,EAAE,GAAGV,KAAK,CAAC;MACjDlD,QAAQ,CAACuD,QAAQ,CAAC;IACpB,CAAC;EACH;EAEA,SAASU,QAAQA,CAACnB,IAAI,EAAE;IACtB,IAAIA,IAAI,EAAE;MACR,IAAIoB,gBAAgB,GAAGP,0BAA0B,CAAC5D,KAAK,EAAE+C,IAAI,CAAC;MAC9D,IAAIqB,QAAQ,GAAGrB,IAAI,CAACsB,IAAI,CAAC,CAAC;MAE1B,oBACEvF,OAAA;QACI0C,EAAE,EAAEuB,IAAI,CAACvB,EAAG;QACZX,SAAS,EAAG,GAAEkC,IAAI,CAACgB,UAAW,IAAGhB,IAAI,CAACuB,YAAa,EAAE;QACrDC,OAAO,EAAEJ,gBAAiB;QAC1BK,SAAS,EAAC,MAAM;QAChBC,WAAW,EAAE/C,YAAa;QAC1BgD,WAAW,EAAElC,iBAAkB;QAAAxB,QAAA,eACjClC,OAAA,CAACsF,QAAQ;UAAAlD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAPL0B,IAAI,CAACvB,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQZ,CAAC;IAET;EACF;EAEA,IAAIsD,YAAY,GAAGlB,gBAAgB,CAACzD,KAAK,EAAEC,QAAQ,CAAC;EACpD,IAAI2E,gBAAgB,GAAGxC,oBAAoB,CAACpC,KAAK,CAAC;EAGlD,IAAI,CAAC6E,IAAI,EAAEC,OAAO,CAAC,GAAG/F,SAAS,CAACiB,KAAK,EAAGV,CAAC,IAAIA,CAAC,CAACyF,MAAO,CAAC;EAEvD,SAASC,SAASA,CAAA,EAAG;IACnB,OAAOH,IAAI,CAAChF,GAAG,CAACqE,QAAQ,CAAC;EAC3B;EAEA,SAASe,YAAYA,CAAA,EAAG;IACtB,OAAOH,OAAO,CAACjF,GAAG,CAACqE,QAAQ,CAAC;EAC9B;EAEA,OAAO,YAAW;IAChB,oBACEpF,OAAA;MAAS0C,EAAE,EAAC,OAAO;MAAAR,QAAA,gBACjBlC,OAAA;QAAI+B,SAAS,EAAC,MAAM;QAChBqE,UAAU,EAAEN,gBAAiB;QAC7BO,MAAM,EAAER,YAAa;QAAA3D,QAAA,eACvBlC,OAAA,CAACmG,YAAY;UAAA/D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACLvC,OAAA;QAAI+B,SAAS,EAAC,UAAU;QAAAG,QAAA,eACtBlC,OAAA,CAACkG,SAAS;UAAA9D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEd,CAAC;AACH;AAEA,SAAS+D,kBAAkBA,CAACpF,KAAK,EAAEC,QAAQ,EAAE;EAE3C,SAASoF,gBAAgBA,CAACN,MAAM,EAAE;IAChC,IAAIvB,QAAQ,GAAGxD,KAAK,CAACH,GAAG,CAACkD,IAAI,IAAI,IAAInE,QAAQ,CAAC;MAAC,GAAGmE,IAAI;MAAEgC,MAAM,EAAEA;IAAM,CAAC,CAAC,CAAC;IACzE9E,QAAQ,CAACuD,QAAQ,CAAC;EACpB;EAEA,MAAM8B,QAAQ,GAAGA,CAAA,KAAMD,gBAAgB,CAAC,IAAI,CAAC;EAC7C,MAAME,UAAU,GAAGA,CAAA,KAAMF,gBAAgB,CAAC,KAAK,CAAC;EAEhD,IAAIG,cAAc,GAAGxF,KAAK,CAACyF,IAAI,CAACnG,CAAC,IAAIA,CAAC,CAACyF,MAAM,KAAK,KAAK,CAAC;EACxD,IAAIW,gBAAgB,GAAG1F,KAAK,CAACyF,IAAI,CAACnG,CAAC,IAAIA,CAAC,CAACyF,MAAM,KAAK,IAAI,CAAC;EAEzD,SAASY,QAAQA,CAAA,EAAG;IAClB1F,QAAQ,CAAC,EAAE,CAAC;EACd;EAEA,SAAS2F,UAAUA,CAAA,EAAG;IACpB,IAAI,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAG/G,SAAS,CAACiB,KAAK,EAAGV,CAAC,IAAIA,CAAC,CAACyG,YAAY,KAAK,IAAK,CAAC;IAEvE,IAAIC,WAAW,GAAGH,KAAK,CAACI,QAAQ,CAC9B,CAACxG,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACsG,YAAY,GAAGrG,CAAC,CAACqG,YAAY,CAAC;IAE5C,IAAIG,aAAa,GAAGJ,OAAO,CAACK,IAAI,CAC9B,CAAC1G,CAAC,EAAEC,CAAC,KAAKF,eAAe,CAACC,CAAC,CAACgB,QAAQ,EAAEf,CAAC,CAACe,QAAQ,CAAC,CAAC;IAEpDR,QAAQ,CAAC,CAAC,GAAG+F,WAAW,EAAE,GAAGE,aAAa,CAAC,CAAC;EAC9C;EAEA,OAAO,YAAW;IAChB,IAAIlG,KAAK,CAAC0D,MAAM,GAAG,CAAC,EAAE;MACpB,oBACE5E,OAAA;QAAK+B,SAAS,EAAC,cAAc;QAAAG,QAAA,gBAC3BlC,OAAA;UAAQwC,IAAI,EAAC,QAAQ;UACbiD,OAAO,EAAEe,QAAS;UAClBzE,SAAS,EAAEjC,QAAQ,CAACwH,WAAW,CAAC,CAACZ,cAAc,CAAE;UAAAxE,QAAA,EACxD;QAAoB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9BvC,OAAA;UAAQwC,IAAI,EAAC,QAAQ;UACbiD,OAAO,EAAEgB,UAAW;UACpB1E,SAAS,EAAEjC,QAAQ,CAACwH,WAAW,CAAC,CAACV,gBAAgB,CAAE;UAAA1E,QAAA,EAC1D;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChCvC,OAAA;UAAQwC,IAAI,EAAC,QAAQ;UAACiD,OAAO,EAAEqB,UAAW;UAAA5E,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChEvC,OAAA;UAAQwC,IAAI,EAAC,QAAQ;UAACiD,OAAO,EAAEoB,QAAS;UAAA3E,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAEV;EACF,CAAC;AACH;AAEA,SAASgF,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,IAAI,CAACtG,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEpC,IAAI4H,SAAS,GAAG5C,aAAa,CAAC3D,KAAK,EAAEC,QAAQ,CAAC;EAC9C,IAAIuG,WAAW,GAAGzG,eAAe,CAACC,KAAK,EAAEC,QAAQ,CAAC;EAClD,IAAIwG,cAAc,GAAGrB,kBAAkB,CAACpF,KAAK,EAAEC,QAAQ,CAAC;EAExD,oBACEnB,OAAA;IAAS0C,EAAE,EAAC,MAAM;IAAAR,QAAA,gBAChBlC,OAAA;MAAK+B,SAAS,EAAC,UAAU;MAAAG,QAAA,gBACvBlC,OAAA;QAAAkC,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdvC,OAAA;QAAG+B,SAAS,EAAC,cAAc;QAAAG,QAAA,EAAC;MAA6D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7FvC,OAAA,CAACyH,SAAS;QAAArF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACbvC,OAAA,CAAC2H,cAAc;QAAAvF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACNvC,OAAA,CAAC0H,WAAW;MAAAtF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACiF,EAAA,CAlBQD,QAAQ;AAAAK,EAAA,GAARL,QAAQ;AAoBjB,SAASM,GAAGA,CAAA,EAAG;EACb,oBAAO7H,OAAA,CAACuH,QAAQ;IAAAnF,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACuF,GAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}