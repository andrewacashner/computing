build_dir = build
svg_dir  = $(build_dir)/svg
dirs     = $(build_dir) $(svg_dir)

base 	 = score
input    = $(base).xml
include  = $(wildcard include/*.xml)

to_mei 	 = xsl/lirio2mei.xsl
to_ly 	 = xsl/lirio2ly.xsl
xsl	 = $(to_mei) $(to_ly)
libly 	 = $(HOME)/ly

ly_out	 = $(build_dir)/$(base).ly
mei_out	 = $(build_dir)/$(base).mei
pdf_out	 = $(build_dir)/$(base).pdf
svg_out	 = $(svg_dir)/$(base)-marker.svg
output   = $(ly_out) $(mei_out) $(pdf_out) $(svg_out)

quiet 	 = &>/dev/null &

.PHONY : all pdf svg ly mei view-pdf view-svg clean
.INTERMEDIATE: $(svg_out)

all : $(output)

pdf : $(pdf_out)

svg : $(svg_out) 

ly : $(ly_out)

mei : $(mei_out)


$(output) : $(input) $(include) $(xsl) $(libly) | $(dirs)

$(dirs) :
	-mkdir -p $(dirs)

# Lirio XML to MEI to SVG
%-noxi.mei : %.xml $(to_mei)
	saxon -s:$< -xsl:$(to_mei) -o:$@

%.mei : %-noxi.mei
	xmllint --xinclude --format $< --output $@

# Use marker as target since Verovio generates one SVG file per page with
# variable file names
%-marker.svg : %.mei
	verovio --all-pages $<
	touch $@

# Lirio XML to Lilypond to PDF
%-xi.xml : %.xml 
	xmllint --xinclude $< --output $@

%.ly : %-xi.xml $(to_ly)
	saxon -s:$< -xsl:$(to_ly) -o:$@

%.pdf : %.ly $(libly)
	lilypond -I $(libly) --output $(basename $@) $<

# To final destination
$(build_dir)/% : %
	cp $< $@

# Move all SVG pagewise files generated by verovio
$(svg_dir)/%.svg : %.svg
	mv *.svg $(svg_dir)


view-pdf : pdf
	evince $(pdf_out) $(quiet)

view-svg : svg
	google-chrome $(wildcard build/*.svg) $(quiet)

clean : 
	-rm -rf $(dirs)

